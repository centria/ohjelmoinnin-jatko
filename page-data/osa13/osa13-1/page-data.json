{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa13/osa13-1",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Graafiset käyttöliittymät\",\n  \"nav_order\": 131,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Note = makeShortcode(\"Note\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"T\\xE4h\\xE4n menness\\xE4 olemme k\\xE4ytt\\xE4neet konsolia, tai terminaalia, kaikkien ohjelmiemme k\\xE4ytt\\xF6liittymin\\xE4. Moderneissa k\\xE4ytt\\xF6j\\xE4rjestelmiss\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"graafiset k\\xE4ytt\\xF6liittym\\xE4t\"), \" (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"graphical user interface\"), \", tai \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GUI\"), \") ovat yleisempi\\xE4. C#:lla on monia vaihtoehtoja graafisten k\\xE4ytt\\xF6liittymien luomiseen Windows-ymp\\xE4rist\\xF6ss\\xE4, ja t\\xE4ll\\xE4 kurssilla k\\xE4ymme nopeasti l\\xE4pi yhden vaihtoehdon.\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"T\\xE4m\\xE4, ja kaikki esimerkit t\\xE4ss\\xE4 osassa, toimivat vain Windowsilla!\"), mdx(\"h2\", {\n    \"id\": \"uuden-windows-forms--projektin-luominen\"\n  }, \"Uuden Windows Forms -projektin luominen\"), mdx(\"p\", null, \"Kun aiemmin loimme uuden komentoriviprojektin, k\\xE4ytimme komentoa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet new ...\"), \". Graafisen projektin luomiseen k\\xE4yt\\xE4mme samaa komentoa, mutta t\\xE4ll\\xE4 kertaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet new winforms\"), \".\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Jos et saa komennolla luotua projektia, saatat joutua vaihtamaan Visual Studio Coden terminaalin PowerShelliksi. Windows Forms -ohjelmia voi luoda ja ajaa vain Windows-pohjaisessa terminaalissa.\"), mdx(\"p\", null, \"Ohjelma voidaan ajaa samalla tavalla kuin konsoliprojekti, eli \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet run\"), \". Yksi suuri ero on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"csproj\"), \"-tiedostossa, jossa m\\xE4\\xE4rit\\xE4mme luovamme Windows-sovelluksen.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<Project Sdk=\\\"Microsoft.NET.Sdk\\\">\\n\\n  <PropertyGroup>\\n    <OutputType>WinExe</OutputType>\\n    <TargetFramework>net6.0-windows</TargetFramework>\\n    <Nullable>enable</Nullable>\\n    <UseWindowsForms>true</UseWindowsForms>\\n    <ImplicitUsings>enable</ImplicitUsings>\\n  </PropertyGroup>\\n\\n</Project>\\n\")), mdx(\"p\", null, \"Kuten n\\xE4kyy, m\\xE4\\xE4ritelm\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OutputType\"), \" on nyt \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WinExe\"), \", eli Windows Executable (Windowsissa suoritettava tiedosto), ja sill\\xE4 on tiedostop\\xE4\\xE4te \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".exe\"), \". T\\xE4m\\xE4n ansiosta l\\xF6yd\\xE4mme my\\xF6s suoritettavan tiedoston projektikansiosta.\"), mdx(\"p\", null, \"Windows Forms on yhden tyyppinen graafinen k\\xE4ytt\\xF6liittym\\xE4, jota voidaan luoda C#:lla. K\\xE4yt\\xE4mme sit\\xE4 t\\xE4ss\\xE4 kurssissa esimerkkein\\xE4.\"), mdx(\"p\", null, \"Luodaan ensimm\\xE4inen projektimme.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Luo kansio projektillesi. Esimerkiss\\xE4 se on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GuiProject\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Jotta kansiorakenne pysyy siistin\\xE4, luo kansio \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"src\"), \" projektitiedoston kansioon, ja siirry sinne.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Aja komento \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet new winforms\"), \" src-kansiossa.\"))), mdx(\"p\", null, \"Saat projektirakenteen, joka n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \".\\n\\u2514\\u2500\\u2500 src\\n    \\u251C\\u2500\\u2500 Form1.Designer.cs\\n    \\u251C\\u2500\\u2500 Form1.cs\\n    \\u251C\\u2500\\u2500 Program.cs\\n    \\u251C\\u2500\\u2500 obj\\n    \\u251C\\u2500\\u2500 src.csproj\\n    \\u2514\\u2500\\u2500 src.csproj.user\\n\")), mdx(\"p\", null, \"Voimme nyt kokeilla projektin toimivuutta komennolla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet run\"), \". Sinun pit\\xE4isi saada auki ikkuna, joka n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/ohjelmoinnin-jatko/master/src/images/part12/winform1.png\",\n    \"alt\": \"Winform1\"\n  })), mdx(\"p\", null, \"Huraa, ohjelma aukeaa! Se ei kuitenkaan tee viel\\xE4 mit\\xE4\\xE4n. Tutkitaan tiedostoja, ja lis\\xE4t\\xE4\\xE4n niihin toiminnallisuutta.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Program.cs\\nnamespace src;\\n\\nstatic class Program\\n{\\n    /// <summary>\\n    ///  The main entry point for the application.\\n    /// </summary>\\n    [STAThread]\\n    static void Main()\\n    {\\n        // To customize application configuration such as set high DPI settings or default font,\\n        // see https://aka.ms/applicationconfiguration.\\n        ApplicationConfiguration.Initialize();\\n        Application.Run(new Form1());\\n    }    \\n}\\n\")), mdx(\"p\", null, \"Meid\\xE4n \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \"-metodissamme on nyt huomattavasti enemm\\xE4n koodia kuin tekstik\\xE4ytt\\xF6liittymiss\\xE4. Konsepti on edelleen melko sama: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \"-metodin p\\xE4\\xE4asiallinen teht\\xE4v\\xE4 on k\\xE4ynnist\\xE4\\xE4 ohjelma. Viimeinen rivi on mielenkiintoisin, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Application.Run(new Form1());\"), \". Katsotaanpa nyt tuota Form1:st\\xE4.\"), mdx(\"p\", null, \"Koodissa on joitain osia, joita emme ole viel\\xE4 k\\xE4sitelleet, ja joita emme k\\xE4sittele t\\xE4ss\\xE4 kurssissa, kuten \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\\<summary\", \">\"), \"-kommentit. Ne ovat osa Windows Fields Designeri\\xE4, ja niist\\xE4 ei tarvitse v\\xE4litt\\xE4\\xE4 (kun k\\xE4yt\\xE4mme Visual Studio Codea).\"), mdx(\"p\", null, \"Meid\\xE4n t\\xE4ytyy kuitenkin v\\xE4litt\\xE4\\xE4 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-3.0/ms182351(v=vs.80)?redirectedfrom=MSDN\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"[STAThread]\")), \"-attribuutista. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"\\\"This attribute must be present on the entry point of any application that uses Windows Forms; if it is omitted, the Windows components might not work correctly. If the attribute is not present, the application uses the multithreaded apartment model, which is not supported for Windows Forms.\\\"\"), \" Lyhyesti suomennettuna, jos sen poistaa, Windows Forms -komponentit eiv\\xE4t toimi oikein.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Form1.cs\\nnamespace src;\\n\\npublic partial class Form1 : Form\\n{\\n    public Form1()\\n    {\\n        InitializeComponent();\\n    }\\n}\\n\")), mdx(\"p\", null, \"Paljon muuta t\\xE4ss\\xE4 tiedostossa ei tapahdu, paitsi kutsumme metodia \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"InitializeComponent();\"), \". Huomaat, ett\\xE4 kutsu tehd\\xE4\\xE4n kuin luokka kutsuisi omaa metodiaan, ja se on aivan totta. T\\xE4m\\xE4 luokka on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"osittainen luokka\"), \" (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"partial class\"), \") ja se perii \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Form\"), \"-luokan. T\\xE4m\\xE4 tarkoittaa, ett\\xE4 se toteuttaa osan Formista, mutta ei kaikkea. Se kutsuu metodia toisesta osittaisesta luokasta, joka on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Form1\"), \" itse. Katsotaanpa sit\\xE4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Form1.Designer.cs\\nnamespace src;\\n\\npartial class Form1\\n{\\n    /// <summary>\\n    ///  Required designer variable.\\n    /// </summary>\\n    private System.ComponentModel.IContainer components = null;\\n\\n    /// <summary>\\n    ///  Clean up any resources being used.\\n    /// </summary>\\n    /// <param name=\\\"disposing\\\">true if managed resources should be disposed; otherwise, false.</param>\\n    protected override void Dispose(bool disposing)\\n    {\\n        if (disposing && (components != null))\\n        {\\n            components.Dispose();\\n        }\\n        base.Dispose(disposing);\\n    }\\n\\n    #region Windows Form Designer generated code\\n\\n    /// <summary>\\n    ///  Required method for Designer support - do not modify\\n    ///  the contents of this method with the code editor.\\n    /// </summary>\\n    private void InitializeComponent()\\n    {\\n        this.components = new System.ComponentModel.Container();\\n        this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\\n        this.ClientSize = new System.Drawing.Size(800, 450);\\n        this.Text = \\\"Form1\\\";\\n    }\\n\\n    #endregion\\n}\\n\\n\")), mdx(\"p\", null, \"J\\xE4lleen kerran, n\\xE4emme paljon kommentteja, jotka on luonut suunnittelija, mutta my\\xF6s kommentin, joka alkaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"#\"), \"-merkill\\xE4. N\\xE4m\\xE4 ovat koodin piilottamista varten tietyiss\\xE4 tilanteissa, mutta meid\\xE4n ei tarvitse v\\xE4litt\\xE4\\xE4 niist\\xE4. Siivoa tiedosto:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace src\\n{\\n  partial class Form1\\n  {\\n    private System.ComponentModel.IContainer components = null;\\n\\n    protected override void Dispose(bool disposing)\\n    {\\n      if (disposing && (components != null))\\n      {\\n        components.Dispose();\\n      }\\n      base.Dispose(disposing);\\n    }\\n\\n    private void InitializeComponent()\\n    {\\n      this.components = new System.ComponentModel.Container();\\n      this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\\n      this.ClientSize = new System.Drawing.Size(800, 450);\\n      this.Text = \\\"Form1\\\";\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Paljon luettavampi. Nyt meill\\xE4 on kaksi metodia, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dispose\"), \" ja \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"InitializeComponent\"), \", ja tunnistamme j\\xE4lkimm\\xE4isen kutsutuksi toisen osittaisen toimesta. Katsotaan sit\\xE4 ensin.\"), mdx(\"p\", null, \"Metodi sis\\xE4lt\\xE4\\xE4 useita rivej\\xE4, joilla jokaisella on tietty teht\\xE4v\\xE4 ohjelmamme ikkunan luomisessa:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.components = new System.ComponentModel.Container();\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4t\\xE4 k\\xE4ytet\\xE4\\xE4n elementtien tallentamiseen, joilla ei ole visuaalista esityst\\xE4 suorituksen aikana, mutta joita voidaan tarvita muuten, kuten taustalla toimiva ajastin.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4t\\xE4 k\\xE4ytet\\xE4\\xE4n m\\xE4\\xE4ritt\\xE4m\\xE4\\xE4n k\\xE4ytetty skaalausmenetelm\\xE4. Oletuksena skaalaus on Font, mutta se voi olla my\\xF6s Dpi, Inherit tai None (Fontti, resoluutio, peritty tai ei mit\\xE4\\xE4n).\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.ClientSize = new System.Drawing.Size(800, 450);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4m\\xE4 on melko itsest\\xE4\\xE4nselv\\xE4, m\\xE4\\xE4ritet\\xE4\\xE4n ikkunan koko.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.Text = \\\"Form1\\\";\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4m\\xE4 m\\xE4\\xE4ritt\\xE4\\xE4 ikkunan vasemmassa yl\\xE4kulmassa olevan tekstin.\")), mdx(\"p\", null, \"Toinen metodimme, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"protected override void Dispose(bool disposing)\"), \", luodaan automaattisesti, ja huolehtii ohjelmamme elementtien h\\xE4vitt\\xE4misest\\xE4 (tai luovuttamisesta roskien ker\\xE4ilylle). Sit\\xE4 k\\xE4ytet\\xE4\\xE4n esimerkiksi, kun suljemme ohjelman ikkunan. Meid\\xE4n tarkoituksiimme meid\\xE4n ei tarvitse koskea siihen.\"), mdx(\"h2\", {\n    \"id\": \"ensimmäinen-toiminnallisuus---hello-world\"\n  }, \"Ensimm\\xE4inen toiminnallisuus - \\\"Hello World\\\"\"), mdx(\"p\", null, \"Kuten aina, aloitamme klassisella \\\"Hello World\\\" -koodillamme. Lis\\xE4t\\xE4\\xE4n sis\\xE4lt\\xF6\\xE4 ikkunaamme.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Form1.cs\\nnamespace src;\\n\\npublic partial class Form1 : Form\\n{\\n    // Added TextBox1\\n    private TextBox textBox1;\\n    public Form1()\\n    {\\n        InitializeComponent();\\n    }\\n}\\n\\n\")), mdx(\"p\", null, \"Kun toinen formimme on osittainen t\\xE4st\\xE4, haluamme luoda muuttujan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"private TextBox\"), \" t\\xE4nne. Voisimme, yht\\xE4 hyvin, luoda sen seuraavaan tiedostoon, ja tuoda oikean nimiavaruuden mukana. Pidet\\xE4\\xE4n se kuitenkin t\\xE4ss\\xE4, ainakin toistaiseksi.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Form1.Designer.cs\\nnamespace src;\\n\\npartial class Form1\\n{\\n    private System.ComponentModel.IContainer components = null;\\n\\n    protected override void Dispose(bool disposing)\\n    {\\n        if (disposing && (components != null))\\n        {\\n            components.Dispose();\\n        }\\n        base.Dispose(disposing);\\n    }\\n\\n    private void InitializeComponent()\\n    {\\n        this.components = new System.ComponentModel.Container();\\n        this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\\n        this.ClientSize = new System.Drawing.Size(800, 450);\\n        // Merkityksellisempi teksti\\n        this.Text = \\\"Hello World Application\\\";\\n\\n        // Kutsu this.textBox1 ja alusta\\n        this.textBox1 = new System.Windows.Forms.TextBox();\\n        // Anna tekstilaatikolle sis\\xE4lt\\xF6\\xE4\\n        this.textBox1.Text = \\\"Hello World\\\";\\n        // Tehd\\xE4\\xE4n siit\\xE4 vain luettava, joten k\\xE4ytt\\xE4j\\xE4t eiv\\xE4t voi muokata sit\\xE4\\n        this.textBox1.ReadOnly = true;\\n        // Keskit\\xE4 ruudulle\\n        this.textBox1.Location = new System.Drawing.Point((this.Width - this.textBox1.Width) / 2, (this.Height - this.textBox1.Height) / 2);\\n        // Lis\\xE4\\xE4 Controls:iin\\n        this.Controls.Add(this.textBox1);\\n    }\\n}\\n\")), mdx(\"p\", null, \"Aika paljon koodi yksinkertaiselle merkkijonolle.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.textBox1 = new System.Windows.Forms.TextBox();\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alustamme standardin tekstilaatikon objektin, hakemalla sen oikeasta nimiavaruudesta. Kuten huomaat, meill\\xE4 ei ole t\\xE4ss\\xE4 osassa mit\\xE4\\xE4n \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"using\"), \"-direktiivej\\xE4, mutta voisimme yht\\xE4 hyvin olla niit\\xE4 t\\xE4ss\\xE4.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.textBox1.Text = \\\"Hello World\\\";\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Luodaan tekstisis\\xE4lt\\xF6 tekstilaatikkoon.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.textBox1.ReadOnly = true;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Est\\xE4\\xE4 k\\xE4ytt\\xE4ji\\xE4 muokkaamasta tekstilaatikkoa. Voit poistaa t\\xE4m\\xE4n rivin ja katsoa, mit\\xE4 tapahtuu.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.textBox1.Location = new System.Drawing.Point((this.Width - this.textBox1.Width) / 2, (this.Height - this.textBox1.Height) / 2);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ei pakollinen, mutta kiva olla. Keskit\\xE4mme elementin antamalla sille uuden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Point\"), \"-tyyppisen \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Location\"), \"-arvon. Location on elementin vasemman yl\\xE4kulman sijainti.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.Controls.Add(this.textBox1);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aiemmin mainitsimme components-objektin, joka sis\\xE4lt\\xE4\\xE4 kaikki n\\xE4kym\\xE4tt\\xF6m\\xE4t komponentit. \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Controls\"), \"-objekti sis\\xE4lt\\xE4\\xE4 kaiken, mit\\xE4 haluamme n\\xE4ytt\\xE4\\xE4 k\\xE4ytt\\xE4j\\xE4lle.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/ohjelmoinnin-jatko/master/src/images/part12/winform2.png\",\n    \"alt\": \"Winform2\"\n  })), mdx(\"h2\", {\n    \"id\": \"lisää-toiminnallisuutta---nappi\"\n  }, \"Lis\\xE4\\xE4 toiminnallisuutta - Nappi\"), mdx(\"p\", null, \"Aika paljon ty\\xF6t\\xE4 tuli tehty\\xE4 ett\\xE4 saimme yksinkertaisen yhden rivin tulosteen GUI:himme. Luodaan seuraavaksi meille nappi (button):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Form1.cs\\n\\nnamespace src;\\n\\npublic partial class Form1 : Form\\n{\\n    private TextBox textBox1;\\n    // lis\\xE4t\\xE4\\xE4n private Button\\n    private Button button1;\\n    public Form1()\\n    {\\n        InitializeComponent();\\n    }\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace src;\\n\\npartial class Form1\\n{\\n    private System.ComponentModel.IContainer components = null;\\n\\n    protected override void Dispose(bool disposing)\\n    {\\n        if (disposing && (components != null))\\n        {\\n            components.Dispose();\\n        }\\n        base.Dispose(disposing);\\n    }\\n\\n    private void InitializeComponent()\\n    {\\n        this.components = new System.ComponentModel.Container();\\n        this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\\n        this.ClientSize = new System.Drawing.Size(800, 450);\\n        this.Text = \\\"Hello World Application\\\";\\n\\n        this.textBox1 = new System.Windows.Forms.TextBox();\\n\\n        this.textBox1.Text = \\\"Hello World\\\";\\n        this.textBox1.ReadOnly = true;\\n        this.textBox1.Location = new System.Drawing.Point((this.Width - this.textBox1.Width) / 2, (this.Height - this.textBox1.Height) / 2);\\n        this.Controls.Add(this.textBox1);\\n\\n        // Nappi\\n        this.button1 = new System.Windows.Forms.Button();\\n        this.button1.Text = \\\"Click me!\\\";\\n        this.button1.Click += new System.EventHandler(ShowMessage);\\n        Controls.Add(this.button1);\\n\\n\\n    }\\n\\n    // Napin toiminnallisuus\\n    private void ShowMessage(object sender, System.EventArgs e)\\n    {\\n        this.textBox1.Text = \\\"Button Clicked!\\\";\\n    }\\n}\\n\\n\")), mdx(\"p\", null, \"Katsotaan mit\\xE4 nappimme koodi tekee:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.button1 = new System.Windows.Forms.Button();\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alustaa uuden nappi-olion\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.button1.Text = \\\"Click me!\\\";\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Antaa napille tekstin\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.button1.Click += new System.EventHandler(ShowMessage);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Napin toiminnallisuus. Klikkauksella kutsutaan \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"EventHandler\"), \"-metodia, joka ottaa parametrinaan metodin.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"Controls.Add(this.button1);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lis\\xE4t\\xE4\\xE4n nappi \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Controls\"), \"-objektiin, jotta se n\\xE4kyy.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/ohjelmoinnin-jatko/master/src/images/part12/winform3.png\",\n    \"alt\": \"Winform3\"\n  })), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"private void ShowMessage(object sender, System.EventArgs e)\\n{\\n  this.textBox1.Text = \\\"Button Clicked!\\\";\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Metodimme ottaa itseasiassa kaksi parametria, mutta annamme sille vain yhden. Toinen parametri, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"System.EventArgs e\"), \" viittaa tapahtumaan, ja t\\xE4ss\\xE4 tapauksessa se olisi hiiren klikkaus. Karkeasti yksinkertaistaen, koska t\\xE4m\\xE4 kutsutaan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"EventHandler\"), \"-metodissa, voimme olettaa tapahtuman tapahtuneen (eli hiiren klikkaus), joka laukaisee metodin kutsun.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Metodissamme me muutamme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"textBox1\"), \"-tekstikent\\xE4n teksti\\xE4.\"))), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/ohjelmoinnin-jatko/master/src/images/part12/winform4.png\",\n    \"alt\": \"Winform4\"\n  })), mdx(\"p\", null, \"Kuten n\\xE4kyy, nyt kun emme antaneet napille mit\\xE4\\xE4n sijaintia, se aloittaa ikkunan vasemmasta yl\\xE4kulmasta. Mit\\xE4 tapahtuu, jos luomme 2 nappia?\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// Eritt\\xE4in rumaa copy-pastea\\nthis.button1 = new System.Windows.Forms.Button();\\nthis.button1.Text = \\\"Click me!\\\";\\nthis.button1.Click += new System.EventHandler(ShowMessage);\\nControls.Add(this.button1);\\n\\nthis.button2 = new System.Windows.Forms.Button();\\nthis.button2.Text = \\\"Click me instead!\\\";\\nthis.button2.Click += new System.EventHandler(ShowMessage);\\nControls.Add(this.button2);\\n\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/ohjelmoinnin-jatko/master/src/images/part12/winform5.png\",\n    \"alt\": \"Winform5\"\n  })), mdx(\"p\", null, \"N\\xE4emme vain ensimm\\xE4isen\\xE4 piirretyn napin. Jos haluamme toisen napin toiseen paikkaan, meid\\xE4n t\\xE4ytyy m\\xE4\\xE4ritt\\xE4\\xE4 uusi sijainti. Muokataan my\\xF6s hieman koodia:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.button2 = new System.Windows.Forms.Button();\\nthis.button2.Text = \\\"Click me instead!\\\";\\nthis.button2.AutoSize = true;\\nthis.button2.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowOnly;\\nthis.button2.Location = new System.Drawing.Point(this.button1.Width+5, 0);\\nthis.button2.Click += new System.EventHandler(ShowMessage); \\nControls.Add(this.button2);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.button2.AutoSize = true;\\nthis.button2.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowOnly;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"N\\xE4ill\\xE4 sallimme napin kasvattaa kokoaan, ja koko teksti tulee n\\xE4kyv\\xE4ksi.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"this.button2.Location = new System.Drawing.Point(this.button1.Width+5, 0);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xE4\\xE4rit\\xE4mme napin sijainnin alkamaan \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"button 1 width + 5 pixels\"), \"-kohdasta, mutta pit\\xE4m\\xE4\\xE4n alkuper\\xE4isen korkeuden. N\\xE4in saamme napit vierekk\\xE4in, hieman v\\xE4li\\xE4 niiden v\\xE4lille.\")), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/ohjelmoinnin-jatko/master/src/images/part12/winform6.png\",\n    \"alt\": \"Winform6\"\n  })), mdx(\"h2\", {\n    \"id\": \"tapahtumakäsittely\"\n  }, \"Tapahtumak\\xE4sittely\"), mdx(\"p\", null, \"Me olemme jo tehneet v\\xE4h\\xE4n tapahtumak\\xE4sittely\\xE4 (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"event handling\"), \") nappiemme kanssa. Mutta mit\\xE4 tapahtumak\\xE4sittely ja tapahtumat oikeastaan tarkoittavat?\"), mdx(\"p\", null, \"Tapahtuma (event) on viesti jonka olio l\\xE4hett\\xE4\\xE4 kertoakseen ett\\xE4 jotain tapahtui. Tapahtuman voi aiheuttaa k\\xE4ytt\\xE4j\\xE4n toiminta, kuten nappia painamalla, tai se voi johtua ohjelman logiikasta, kuten muuttaessa muuttujan arvoa, kuten me teimme tekstikentt\\xE4mme kanssa aiemmin. Olio joka l\\xE4hett\\xE4\\xE4 tapahtuman on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"tapahtuman l\\xE4hett\\xE4j\\xE4\"), \" (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"event sender\"), \"). Tapahtuman l\\xE4hett\\xE4j\\xE4 ei tied\\xE4 mik\\xE4 olio tai metodi k\\xE4sittelee sen l\\xE4hett\\xE4m\\xE4\\xE4 tapahtumaa. Tapahtuma on tyypillisesti l\\xE4hett\\xE4j\\xE4n j\\xE4sen; esimerkiksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Click\"), \"-tapahtuma on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Button\"), \"-luokan j\\xE4sen.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Tapahtumaan reagoidaksesi\"), \", sinun tulee m\\xE4\\xE4ritt\\xE4\\xE4 tapahtumank\\xE4sittelij\\xE4metodi tapahtuman vastaanottajalle. T\\xE4m\\xE4 metodi t\\xE4ytyy vastata tapahtuman l\\xE4hett\\xE4j\\xE4n m\\xE4\\xE4rittelem\\xE4\\xE4 delegaattia. Tapahtumank\\xE4sittelij\\xE4ss\\xE4 suoritetaan toiminnot joita vaaditaan kun tapahtuma laukaistaan, kuten k\\xE4ytt\\xE4j\\xE4n sy\\xF6tteen ker\\xE4\\xE4minen kun k\\xE4ytt\\xE4j\\xE4 painaa nappia. Vastaanottaaksesi ilmoituksen tapahtumasta, tapahtumank\\xE4sittelij\\xE4metodin t\\xE4ytyy tilata tapahtuma.\"), mdx(\"p\", null, \"Seuraava esimerkki n\\xE4ytt\\xE4\\xE4 tapahtumank\\xE4sittelij\\xE4metodin nimelt\\xE4\\xE4n \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ShowMessage\"), \" joka vastaa EventHandler delegaatin m\\xE4\\xE4ritt\\xE4m\\xE4\\xE4 tapahtumaa. Metodi tilaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Button.Click\"), \"-tapahtuman. T\\xE4m\\xE4 tarkoittaa ett\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ShowMessage\"), \"-metodi suoritetaan kun \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Button\"), \"-luokan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Click\"), \"-tapahtuma laukaistaan.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"\\n```cpp\\nprivate void ShowMessage(object sender, System.EventArgs e)\\n{\\n  this.textBox1.Text = \\\"Button Clicked!\\\";\\n}\\n\")), mdx(\"p\", null, \"Tapahtumank\\xE4sittelij\\xE4ll\\xE4 voi olla my\\xF6s vaihtoehtoja. Esimerkiksi, kahdella napillamme voi olla sama k\\xE4sittelij\\xE4, mutta eri toiminnallisuus:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"private void ShowMessage(object sender, System.EventArgs e)\\n{\\n  string buttonName = (sender as System.Windows.Forms.Button).Text;\\n  if (buttonName == \\\"Click me!\\\")\\n  {\\n    this.textBox1.Text = \\\"Button Clicked!\\\";\\n  }\\n  else\\n  {\\n    this.textBox1.Text = \\\"Other Button Clicked!\\\";\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"ensimmäinen-oikea-ohjelmamme\"\n  }, \"Ensimm\\xE4inen oikea ohjelmamme\"), mdx(\"p\", null, \"Luodaan jotain merkityksellisemp\\xE4\\xE4 uusilla taidoillamme, kuten yksinkertainen laskin. \"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/ohjelmoinnin-jatko/master/src/images/part12/calculator.png\",\n    \"alt\": \"Calculator\"\n  })), mdx(\"p\", null, \"Projektirakenteemme on kutakuinkin seuraavanlainen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \".\\n\\u2514\\u2500\\u2500 src\\n    \\u251C\\u2500\\u2500 Calculators\\n    \\u2502   \\u251C\\u2500\\u2500 Calculator.Designer.cs\\n    \\u2502   \\u2514\\u2500\\u2500 Calculator.cs\\n    \\u251C\\u2500\\u2500 GuiCalculator.csproj\\n    \\u251C\\u2500\\u2500 Program.cs\\n    \\u251C\\u2500\\u2500 bin\\n    \\u2514\\u2500\\u2500 obj\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/centria/csharp-calculator\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Voit l\\xF6yt\\xE4\\xE4 koodin t\\xE4\\xE4lt\\xE4!\")), \", joten sinun ei tarvitse kirjoittaa jokaista osaa itse.\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Emme laita koko koodia t\\xE4h\\xE4n, vaan l\\xF6yd\\xE4t sen linkin takaa.\"), mdx(\"p\", null, \"Katsotaan joitain yksityiskohtia:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace GuiCalculator;\\n\\nusing System.Windows.Forms;\\nstatic class Program\\n{\\n    [STAThread]\\n    static void Main()\\n    {\\n        Application.SetHighDpiMode(HighDpiMode.SystemAware);\\n        Application.EnableVisualStyles();\\n        Application.SetCompatibleTextRenderingDefault(false);\\n        Application.Run(new Calculator());\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Main-luokkamme on edelleen hyvin yksinkertainen. Vaikka ohjelmamme on suurempi, Main on pidetty yksinkertaisena. \")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace GuiCalculator;\\n\\nusing System.Windows.Forms;\\npublic partial class Calculator : Form\\n{\\n    // Calculation variables\\n    private double accumulator = 0;\\n    private string lastOperation;\\n\\n    // Number buttons\\n    private Button button0 = new Button();\\n    private Button button1 = new Button();\\n    private Button button2 = new Button();\\n    /* \\n    . . .\\n\\n    ALL THE BUTTONS\\n    */\\n    private TextBox results = new TextBox();\\n\\n    // Very clean constructor\\n    public Calculator()\\n    {\\n        InitializeComponent();\\n    }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"private void InitializeComponent()\\n{\\n    this.components = new System.ComponentModel.Container();\\n    this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\\n    this.ClientSize = new System.Drawing.Size(300, 300);\\n    // Teksti ylh\\xE4\\xE4ll\\xE4\\n    this.Text = \\\"Calculator\\\";\\n\\n    // Nappien koko\\n    int buttonWidth = 60;\\n    int buttonHeight = 60;\\n\\n    // Tuloslaatikko\\n    this.results.Text = \\\"0\\\";\\n    this.results.Font = new System.Drawing.Font(\\\"Arial\\\", 30);\\n    this.results.Width = 300;\\n    // Siirr\\xE4 teksti oikealle\\n    this.results.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;\\n    this.results.ReadOnly = true;\\n    this.results.Location = new System.Drawing.Point(0, 0);\\n\\n    // M\\xE4\\xE4rit\\xE4 nappi 7, yl\\xE4-vasen\\n    this.button7.Location = new System.Drawing.Point(0, buttonHeight);\\n    this.button7.Font = new System.Drawing.Font(\\\"Arial\\\", 20);\\n    this.button7.Height = buttonHeight;\\n    this.button7.Width = buttonWidth;\\n    this.button7.Text = \\\"7\\\";\\n    this.button7.Click += new System.EventHandler(AddToString);\\n  \\n  /* \\n  \\n  PALJON LIS\\xC4\\xC4 KOODIA T\\xC4SS\\xC4 \\n  \\n  */\\n  \\n  // Lis\\xE4\\xE4 kaikki napit Controls:iin\\n  \\n  this.Controls.Add(this.results);\\n\\n  this.Controls.Add(button0);\\n  this.Controls.Add(button1);\\n  /*\\n  Lis\\xE4\\xE4 kaikki osat Controls:iin. AIVAN KAIKKI.\\n  */\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensin luomme ohjelman ikkunan kuten aiemminkin\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4m\\xE4n j\\xE4lkeen m\\xE4\\xE4rit\\xE4mme pari muuttujaa k\\xE4ytett\\xE4v\\xE4ksi layoutissa\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xE4\\xE4ritell\\xE4\\xE4n TextBox tuloksille ja laskuille\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Alustetaan teksti \\\"0\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Iso fontti\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Leveys koko ikkunan levyinen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"K\\xE4ytt\\xE4j\\xE4 ei voi muokata teksti\\xE4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aloitetaan vasemmasta yl\\xE4kulmasta (oletus)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xE4\\xE4ritell\\xE4\\xE4n ensimm\\xE4inen nappi, koska se aloittaa yl\\xE4-vasemmalta tuloslaatikon j\\xE4lkeen\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aloita TextBoxin alapuolelta\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Isompi fontti\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"K\\xE4yt\\xE4 muuttujia tehd\\xE4ksesi siit\\xE4 neliskanttinen\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"M\\xE4\\xE4rit\\xE4 mit\\xE4 napissa lukee\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lis\\xE4\\xE4 tapahtumank\\xE4sittelij\\xE4\")))), mdx(\"p\", null, \"Voit lukea lopun koodin repositoriosta. Ne ovat kaikki melko samanlaisia (ja voisivat ehk\\xE4 olla olioita). Mielenkiintoisimmat ovat tapahtumank\\xE4sittelij\\xE4t:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"private void AddToString(object sender, System.EventArgs e)\\n{\\n  string number = (sender as System.Windows.Forms.Button).Text;\\n  if ((results.Text.Contains(\\\".\\\") && number == \\\".\\\") || (results.Text == \\\"0\\\" && number == \\\".\\\"))\\n  {\\n    return;\\n  }\\n  if (results.Text == \\\"0\\\")\\n  {\\n    results.Text = number;\\n  }\\n  else\\n  {\\n    results.Text += number;\\n  }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4ll\\xE4 tapahtumank\\xE4sittelij\\xE4ll\\xE4 lis\\xE4\\xE4mme numeroita ja desimaaleja tekstikentt\\xE4\\xE4n.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jotta numerot pysyv\\xE4t siistein\\xE4, tarkistamme voimmeko lis\\xE4t\\xE4 desimaalin\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emme voi lis\\xE4t\\xE4 desimaalia alkuun, ja vain yhden per numero\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jos teksti on 0, korvaa se sy\\xF6tetyll\\xE4 numerolla\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Muuten lis\\xE4\\xE4 numero tekstiin\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"private void CalculateResult(object sender, System.EventArgs e)\\n{\\n  string operation = (sender as System.Windows.Forms.Button).Text;\\n  double currentValue = System.Convert.ToDouble(results.Text, System.Globalization.CultureInfo.InvariantCulture);\\n  if (operation == \\\"C\\\")\\n  {\\n    this.accumulator = 0;\\n  }\\n  else if (lastOperation == \\\"+\\\")\\n  {\\n    accumulator += currentValue;\\n  }\\n  else if (lastOperation == \\\"-\\\")\\n  {\\n    accumulator -= currentValue;\\n  }\\n  else if (lastOperation == \\\"*\\\")\\n  {\\n    accumulator *= currentValue;\\n  }\\n  else if (lastOperation == \\\"/\\\")\\n  {\\n    accumulator /= currentValue;\\n  }\\n  else\\n  {\\n    accumulator = currentValue;\\n  }\\n\\n  lastOperation = operation;\\n\\n  if (operation == \\\"=\\\")\\n  {\\n    results.Text = accumulator.ToString();\\n  }\\n  else\\n  {\\n    results.Text = \\\"0\\\";\\n  }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4m\\xE4 on monimutkaisempi. Se k\\xE4y l\\xE4pi kaikki operaatioiden napit.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"string operation = (sender as System.Windows.Forms.Button).Text;\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tallennamme operaation nimen merkkijonoon, parsimalla sen \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Button.Text\"), \"-ominaisuudesta. \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"sender\"), \" tunnistetaan metodin parametrist\\xE4.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"double currentValue = System.Convert.ToDouble(results.Text, System.Globalization.CultureInfo.InvariantCulture);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parsimme muuttujan \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"currentValue\"), \" \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"results.Text\"), \"-ominaisuudesta liukuluvuksi.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"  if (operation == \\\"C\\\")\\n  {\\n    this.accumulator = 0;\\n  }\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jos haluamme nollata laskumme, painamme \\\"C\\\". Se asettaa laskurin nollaan.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"else if (lastOperation == \\\"+\\\")\\n{\\n  accumulator += currentValue;\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Operaatiolla \\\"+\\\" me lis\\xE4\\xE4mme \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"currentValue\"), \" laskurin arvoon. Muut operaatiot toimivat samalla tavalla, merkist\\xE4 riippuen.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Itseasiassa k\\xE4yt\\xE4mme muuttujaa \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"lastOperation\"), \" sen sijaan, ett\\xE4 k\\xE4ytt\\xE4isimme \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"operation\"), \"-muuttujaa, koska haluamme n\\xE4ytt\\xE4\\xE4 tuloksen vain jos on jo tehty lasku.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Esimerkiksi jos sy\\xF6t\\xE4mme laskimeemme\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"1\\n2\\n+\\n3\\n+\\n3\\n=\\n\")), mdx(\"p\", null, \"N\\xE4emme tuloksen jonka \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"results\"), \" n\\xE4ytt\\xE4\\xE4 meille,\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"12\\n0\\n15\\n0\\n18\\n\")), mdx(\"p\", null, \"Eli edellinen tlos on n\\xE4kyviss\\xE4 vain kun seuraava operaatio on painettu. Muistetaan, ett\\xE4 my\\xF6s \\\"=\\\" on operaatio.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"lastOperation = operation;\\n\\nif (operation == \\\"=\\\")\\n{\\n  results.Text = accumulator.ToString();\\n}\\nelse\\n{\\n  results.Text = \\\"0\\\";\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Operaation j\\xE4lkeen tallennamme sen \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"lastOperation\"), \"-muuttujaan, jotta voimme k\\xE4ytt\\xE4\\xE4 sit\\xE4 seuraavassa laskussa.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Jos operaatio oli \\\"=\\\", n\\xE4yt\\xE4mme tuloksen. Muuten n\\xE4yt\\xE4mme 0, koska olemme aloittamassa uutta sy\\xF6tett\\xE4.\"))), mdx(\"h2\", {\n    \"id\": \"yhteenveto\"\n  }, \"Yhteenveto\"), mdx(\"p\", null, \"Graafiset k\\xE4ytt\\xF6liittym\\xE4t vaativat aika paljon koodia saavuttaakseen edes yksinkertaisen ohjelman. Sovellukset monimutkaistuvat nopeasti. T\\xE4m\\xE4 osa oli tarkoitettu demonstroimaan GUI:n mahdollisuuksia, ei olemaan kattava opas.\"), mdx(\"p\", null, \"On olemassa helpompia tapoja tehd\\xE4 k\\xE4ytt\\xF6liittymi\\xE4, C#:lla, kuten \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/visualstudio/ide/create-a-visual-basic-winform-in-visual-studio?view=vs-2019\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Visual Studio\")), \" k\\xE4ytt\\xE4minen. N\\xE4iden oppiminen j\\xE4\\xE4 sinulle.\"), mdx(\"h1\", {\n    \"id\": \"tehtävät\"\n  }, \"Teht\\xE4v\\xE4t\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Ei teht\\xE4vi\\xE4 graafisille k\\xE4ytt\\xF6liittymille, koska ne toimivat vain Windowsilla!\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#uuden-windows-forms--projektin-luominen","title":"Uuden Windows Forms -projektin luominen"},{"url":"#ensimmäinen-toiminnallisuus---hello-world","title":"Ensimmäinen toiminnallisuus - \"Hello World\""},{"url":"#lisää-toiminnallisuutta---nappi","title":"Lisää toiminnallisuutta - Nappi"},{"url":"#tapahtumakäsittely","title":"Tapahtumakäsittely"},{"url":"#ensimmäinen-oikea-ohjelmamme","title":"Ensimmäinen oikea ohjelmamme"},{"url":"#yhteenveto","title":"Yhteenveto"}]},{"url":"#tehtävät","title":"Tehtävät"}]},"frontmatter":{"title":"Graafiset käyttöliittymät"}}},"pageContext":{"id":"77d1d367-bcf8-5e53-b585-b11565be2d37"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}