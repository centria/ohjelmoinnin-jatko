{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa11/osa11-1",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Satunnaisuus eli Random\",\n  \"nav_order\": 111,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Note = makeShortcode(\"Note\");\nvar Exercise = makeShortcode(\"Exercise\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Salausalgoritmit, koneoppiminen ja tietokonepelien tekeminen v\\xE4hemm\\xE4n ennustettaviksi vaativat kaikki satunnaisuutta. Satunnaisuutta voidaan mallintaa satunnaisluvuilla. C# tarjoaa valmiin \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"System.Random\"), \" -luokan satunnaislukujen luomiseen. Random-luokan ilmentym\\xE4\\xE4 voidaan k\\xE4ytt\\xE4\\xE4 seuraavasti:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Exercise001\\n{\\n  using System;\\n  \\n  class Program\\n  {\\n    public static void Main(String[] args)\\n    {\\n      Random ladyLuck = new Random(); // luodaan Random-olio nimelt\\xE4 ladyLuck\\n\\n      for (int i = 0; i < 10; i++)\\n      {\\n        // arvotaan ja tulostetaan satunnainen luku\\n        int randomNumber = ladyLuck.Next(10);\\n        Console.WriteLine(randomNumber);\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Yll\\xE4 loimme instanssin luokasta Random. Sill\\xE4 on metodi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Next\"), \", jolle annetaan kokonaisluku parametrina. Metodi palauttaa satunnaisen luvun v\\xE4lilt\\xE4 \", \"[\", \"0, kokonaisluku\", \"[\", \" eli 0..(kokonaisluku -1).\"), mdx(\"p\", null, \"Ohjelman tulostus ei ole aina sama. Yksi mahdollinen tulostus on seuraava:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"2 \\n9 \\n4 \\n3 \\n4 \\n5 \\n6 \\n0 \\n7 \\n8\\n\")), mdx(\"p\", null, \"Voimme k\\xE4ytt\\xE4\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Next\"), \"-metodia luomaan monenlaisia satunnaisia lukuja. Esimerkiksi voimme tarvita ohjelmaa, joka antaa l\\xE4mp\\xF6tilan v\\xE4lilt\\xE4 \", \"[\", \"-30,50\", \"]\", \". T\\xE4m\\xE4n voimme tehd\\xE4 ensin luomalla satunnaisen luvun v\\xE4lilt\\xE4 0..80 ja sitten v\\xE4hent\\xE4m\\xE4ll\\xE4 siit\\xE4 30.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"Random weatherMan = new Random();\\nint temperature = weatherMan.Next(81) - 30;\\nConsole.WriteLine(temperature);\\n\")), mdx(\"p\", null, \"J\\xE4rkev\\xE4mpi tapa tehd\\xE4 t\\xE4m\\xE4 on kuitenkin k\\xE4ytt\\xE4\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Random.Next(lowerLimit, upperLimit)\"), \", kuten seuraavasti:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"Random weatherMan = new Random();\\nint temperature = weatherMan.Next(-30, 51);\\nConsole.WriteLine(temperature);\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Alaraja (eli lowerLimit) on mukana, mutta yl\\xE4raja (eli upperLimit) ei ole. N\\xE4in saamme satunnaisen luvun v\\xE4lilt\\xE4 -30..50!\"), mdx(\"p\", null, \"Random-oliota voidaan k\\xE4ytt\\xE4\\xE4 my\\xF6s satunnaisen liukuluvun luomiseen. N\\xE4it\\xE4 voidaan esimerkiksi k\\xE4ytt\\xE4\\xE4 todenn\\xE4k\\xF6isyyksien laskemiseen. Tietokoneet usein simuloivat todenn\\xE4k\\xF6isyyksi\\xE4 k\\xE4ytt\\xE4m\\xE4ll\\xE4 liukulukuja v\\xE4lilt\\xE4 \", \"[\", \"0..1\", \"]\", \".\"), mdx(\"p\", null, \"Metodi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NextDouble\"), \" luokassa Random luo satunnaisen liukuluvun v\\xE4lilt\\xE4 \", \"[\", \"0..1\", \"]\", \". Oletetaan, ett\\xE4 s\\xE4\\xE4 seuraa seuraavia todenn\\xE4k\\xF6isyyksi\\xE4:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On 0.1 todenn\\xE4k\\xF6isyys, ett\\xE4 sataa (10%)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On 0.3 todenn\\xE4k\\xF6isyys, ett\\xE4 sataa lunta (30%)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On 0.6 todenn\\xE4k\\xF6isyys, ett\\xE4 paistaa aurinko (60%)\")), mdx(\"p\", null, \"Luodaan s\\xE4\\xE4ennuste k\\xE4ytt\\xE4m\\xE4ll\\xE4 n\\xE4it\\xE4 todenn\\xE4k\\xF6isyyksi\\xE4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Exercise001\\n{\\n  using System;\\n\\n  public class WeatherMan\\n  {\\n    private Random random;\\n\\n    public WeatherMan()\\n    {\\n      this.random = new Random();\\n    }\\n\\n    public string Forecast()\\n    {\\n      double propability = this.random.NextDouble();\\n\\n      if (propability <= 0.1)\\n      {\\n        return \\\"It rains\\\";\\n      }\\n      else if (propability <= 0.4)\\n      { // 0.1 + 0.3\\n        return \\\"It snows\\\";\\n      }\\n      else\\n      { // loput, 1.0 - 0.4 = 0.6\\n        return \\\"The sun shines\\\";\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Lis\\xE4t\\xE4\\xE4n nyt main-metodi, joka k\\xE4ytt\\xE4\\xE4 WeatherMan-luokkaa.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Exercise001\\n{\\n  using System;\\n  using System.Collections.Generic;\\n\\n  class Program\\n  {\\n    public static void Main(string[] args)\\n    {\\n      WeatherMan forecaster = new WeatherMan();\\n\\n      // tallennetaan viikonp\\xE4iv\\xE4t listaan\\n      List<string> days = new List<string>();\\n      days.Add(\\\"Mon\\\");\\n      days.Add(\\\"Tue\\\");\\n      days.Add(\\\"Wed\\\");\\n      days.Add(\\\"Thu\\\");\\n      days.Add(\\\"Fri\\\");\\n      days.Add(\\\"Sat\\\");\\n      days.Add(\\\"Sun\\\");\\n\\n      Console.WriteLine(\\\"Next week's weather forecast:\\\");\\n\\n      foreach (string day in days)\\n      {\\n        string weatherForecast = forecaster.Forecast();\\n\\n        Console.WriteLine(day + \\\": \\\" + weatherForecast + \\\".\\\");\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Yksi mahdollinen tuloste voisi olla seuraava:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Next week's weather forecast:\\nMon: The sun shines.\\nTue: It snows.\\nWed: The sun shines.\\nThu: The sun shines.\\nFri: The sun shines.\\nSat: It snows.\\nSun: It snows.\\n\")), mdx(\"p\", null, \"Voimme ennustaa miten tietokoneet toimivat, koska ne orjallisesti suorittavat kaikki k\\xE4skyt, jotka annamme niille. Onko tietokoneen luoma satunnainen luku sitten oikeasti satunnainen?\"), mdx(\"p\", null, \"Tietokoneen k\\xE4ytt\\xE4m\\xE4t satunnaisluvut ovat tyypillisesti n\\xE4enn\\xE4isen satunnaisia (pseudosatunnainen, englanniksi pseudorandom). Ne vaikuttavat satunnaisilta, mutta todellisuudessa ne seuraavat jonkinlaista algoritmista sarjaa. Useimmiten pseudosatunnaisuus riitt\\xE4\\xE4 -- esimerkiksi k\\xE4ytt\\xE4j\\xE4 ei huomaa, jos YouTube:n satunnaissoitto on pseudosatunnaista. Toisaalta jos satunnaislukuja k\\xE4ytet\\xE4\\xE4n tieteellisiss\\xE4 laskuissa, heikko pseudosatunnaislukugeneraattori voi johtaa kyseenalaisiin tuloksiin. Yksi esimerkki t\\xE4llaisesta on IBM:n \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/RANDU\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"RANDU\")), \", jota k\\xE4ytettiin hetken aikaa 1960-luvulla.\"), mdx(\"p\", null, \"Kaikki tietokoneiden satunnaislukugeneraattorit eiv\\xE4t ole pseudosatunnaisia. Vahvemman satunnaisuuden takaavat muun muassa todellisen el\\xE4m\\xE4n satunnaiset ilmi\\xF6t. Esimerkiksi avaruuss\\xE4teily tai \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cloudflare.com/learning/ssl/lava-lamp-encryption/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"laavalampun\")), \" liike ovat ajateltu olevan satunnaisia ilmi\\xF6it\\xE4.\"), mdx(\"p\", null, \"Voit lukea lis\\xE4\\xE4 satunnaisuudesta osoitteesta \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.random.org/randomness/\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"https://www.random.org/randomness/\")), \".\"), mdx(\"h1\", {\n    \"id\": \"tehtävät\"\n  }, \"Teht\\xE4v\\xE4t\"), mdx(Exercise, {\n    title: '001 Dice',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Teht\\xE4v\\xE4pohjassa on luokka \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Die\"), \", joka on seuraavanlainen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Exercise\\n{\\n  using System;\\n  public class Die\\n  {\\n    private Random random;\\n    private int numberOfFaces;\\n\\n    public Die(int numberOfFaces)\\n    {\\n      this.random = new Random();\\n      // Initialize the value of numberOfFaces here\\n    }\\n    public int ThrowDie()\\n    {\\n      // generate a random number which may be any number\\n      // between one and the number of faces, and then return it\\n      return 0;\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Muokkaa luokkaa siten, ett\\xE4 konstruktori \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Die(int numberOfFaces)\"), \" luo uuden nopan, jolla on annettu m\\xE4\\xE4r\\xE4 silmi\\xE4 (eli numeroita). Muokkaa my\\xF6s metodia \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ThrowDie\"), \" siten, ett\\xE4 se palauttaa satunnaisen heiton nopalla, joka on v\\xE4lill\\xE4 1 ... silmien m\\xE4\\xE4r\\xE4.\"), mdx(\"p\", null, \"Seuraava on p\\xE4\\xE4ohjelma nopan testaamiseksi:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"Die die = new Die(6);\\n\\nfor (int i = 0; i < 10; i++)\\n{\\n  Console.WriteLine(die.ThrowDie());\\n}\\n\")), mdx(\"p\", null, \"Tulos voisi olla vaikka seuraava:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"5\\n3\\n2\\n6\\n4\\n2\\n4\\n1\\n2\\n5\\n\"))), mdx(Exercise, {\n    title: '002 Lottery Row',\n    mdxType: \"Exercise\"\n  }, mdx(\"p\", null, \"Teht\\xE4v\\xE4si on t\\xE4ydent\\xE4\\xE4 luokka \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"LotteryRow\"), \", jota k\\xE4ytet\\xE4\\xE4n viikon voittonumeroiden arpomiseen. Numerot ovat v\\xE4lilt\\xE4 1--40, ja arvotaan yhteens\\xE4 7 numeroa. Eli lotto-rivi koostuu seitsem\\xE4st\\xE4 eri numerosta, jotka kaikki ovat v\\xE4lilt\\xE4 1--40.\"), mdx(\"p\", null, \"Sinun tulisi toteuttaa seuraavat toiminnallisuudet luokkaan:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Konstruktori \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"LotteryRow\"), \" luo uuden LotteryRow-olion, joka sis\\xE4lt\\xE4\\xE4 uudet satunnaiset numerot.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Metodi \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Numbers\"), \" palauttaa arvotut numerot.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Metodi \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ContainsNumber\"), \" kertoo, onko annettu numero arvottujen numeroiden joukossa.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Metodi \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"RandomizeNumbers\"), \" arpoo uudet numerot lotto-riville.\")), mdx(\"p\", null, \"Perusrakenne luokalle on seuraava:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Exercise002\\n{\\n  using System;\\n  using System.Collections.Generic;\\n\\n  public class LotteryRow\\n  {\\n    private List<int> numbers;\\n\\n    public LotteryRow()\\n    {\\n      this.RandomizeNumbers();\\n    }\\n\\n    public List<int> Numbers()\\n    {\\n      return this.numbers;\\n    }\\n\\n    public bool ContainsNumber(int number)\\n    {\\n      // Tests whether the number is already among the randomized numbers\\n      return false;\\n    }\\n\\n    public void RandomizeNumbers()\\n    {\\n      // initialize the list for numbers\\n      this.numbers = new List<int>();\\n      // Implement the randomization of the numbers by using the method ContainsNumber() here\\n    }\\n\\n  }\\n}\\n\")), mdx(\"p\", null, \"Seuraava Main-ohjelma on tarjolla teht\\xE4v\\xE4pohjassa:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"LotteryRow row = new LotteryRow();\\nList<int> lotteryNumbers = row.Numbers();\\n\\nConsole.WriteLine(\\\"Lottery numbers:\\\");\\nforeach (int number in lotteryNumbers)\\n{\\n  Console.Write(number + \\\" \\\");\\n}\\n\\nConsole.WriteLine(\\\"\\\");\\n\")), mdx(\"p\", null, \"T\\xE4ss\\xE4 pari esimerkkitulostetta ohjelmasta:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Lottery numbers:\\n2 10 14 15 22 26 33\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Lottery numbers:\\n6 8 10 26 31 35 40\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Sama numero ei voi esiinty\\xE4 lotto-rivill\\xE4 kahdesti. Muista my\\xF6s k\\xE4ytt\\xE4\\xE4 metodia Sort() metodin RandomizeNumbers() lopussa.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#tehtävät","title":"Tehtävät"}]},"frontmatter":{"title":"Satunnaisuus eli Random"}}},"pageContext":{"id":"84527ba0-aaf8-5402-ac07-b8bac8478dd8"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}