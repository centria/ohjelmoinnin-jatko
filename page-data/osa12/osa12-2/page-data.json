{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa12/osa12-2",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Using\",\n  \"nav_order\": 122,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Note = makeShortcode(\"Note\");\nvar Exercise = makeShortcode(\"Exercise\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"using-käyttäminen\"\n  }, \"Using k\\xE4ytt\\xE4minen\"), mdx(\"p\", null, \"Materiaalissa ja teht\\xE4viss\\xE4mme, olemme k\\xE4ytt\\xE4neet avainsanaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using\"), \" vain tuomaan muita nimiavaruuksia luokkiemme k\\xE4ytt\\xF6\\xF6n, mutta se ei ole ainoa tapa k\\xE4ytt\\xE4\\xE4 sit\\xE4. Avainsana \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using\"), \" voidaan karkeasti jakaa kahteen, direktiiviin ja lausekkeeseen (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using directive\"), \" ja \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using statement\"), \"). Aloittakaamme ensimm\\xE4isest\\xE4.\"), mdx(\"h2\", {\n    \"id\": \"using-direktiivi\"\n  }, \"Using direktiivi\"), mdx(\"p\", null, \"Nimiavaruudet ovat k\\xE4ytett\\xE4viss\\xE4 koodissamme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using direktiivin\"), \" (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using directive\"), \") avulla. Esimerkiksi,\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"using System;\\n\")), mdx(\"p\", null, \"On direktiivi. Sen avulla annamme koodillemme p\\xE4\\xE4syn muiden nimiavaruuksien j\\xE4seniin, kuten yll\\xE4 olevassa esimerkiss\\xE4 System-nimiavaruuteen. Voimme my\\xF6s k\\xE4ytt\\xE4\\xE4 direktiivi\\xE4 luodaksemme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"aliaksia\"), \".\"), mdx(\"p\", null, \"Kun k\\xE4yt\\xE4mme t\\xE4t\\xE4 direktiivi\\xE4, saamme p\\xE4\\xE4syn kyseiseen nimiavaruuteen, mutta emme sen sis\\xE4isiin nimiavaruuksiin, eik\\xE4 ylempiin nimiavaruuksiin. T\\xE4st\\xE4 syyst\\xE4 meill\\xE4 on usein useita nimiavaruuksia samasta ylemm\\xE4st\\xE4 nimiavaruudesta, kuten\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"using System;\\nusing System.IO;\\nusing System.Collections.Generic;\\n// ja niin edelleen\\n\")), mdx(\"p\", null, \"Vaikka meill\\xE4 on p\\xE4\\xE4sy System-nimiavaruuteen, meill\\xE4 ei ole automaattisesti p\\xE4\\xE4sy\\xE4 System.IO- tai muihin sis\\xE4kk\\xE4isiin nimiavaruuksiin.\"), mdx(\"p\", null, \"Using direktiivi\\xE4 tulisi k\\xE4ytt\\xE4\\xE4...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L\\xE4hdekooditiedoston alussa, ennen mink\\xE4\\xE4n nimiavaruuden tai luokan m\\xE4\\xE4rittely\\xE4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mink\\xE4 tahansa nimiavaruuden sis\\xE4ll\\xE4, mutta ennen mink\\xE4\\xE4n nimiavaruuden tai luokan m\\xE4\\xE4rittely\\xE4 t\\xE4ss\\xE4 nimiavaruuksessa.\")), mdx(\"p\", null, \"Mihin laitat direktiivin, m\\xE4\\xE4ritt\\xE4\\xE4 sen mitk\\xE4 tiedoston osat p\\xE4\\xE4sev\\xE4t direktiiviin k\\xE4siksi. Direktiivi on rajoitettu vain kyseiseen tiedostoon, joten direktiivin laittaminen yhteen tiedostoon ei anna p\\xE4\\xE4sy\\xE4 koko nimiavaruuteen, vaan sinun t\\xE4ytyy laittaa direktiivi jokaiseen tiedostoon, johon haluat p\\xE4\\xE4syn.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/fi-fi/dotnet/csharp/language-reference/keywords/using-directive\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Voit lukea lis\\xE4\\xE4 direktiiveist\\xE4 dokumentaatiosta.\"))), mdx(\"h3\", {\n    \"id\": \"aliakset\"\n  }, \"Aliakset\"), mdx(\"p\", null, \"Aliaksia k\\xE4ytet\\xE4\\xE4n nimiavaruuksien ja luokkien tunnistamisen helpottamiseksi. Esimerkiksi, suuremmassa projektissa meill\\xE4 voi olla useita osia, joissa on samannimisi\\xE4 metodeja, ja koodissamme meid\\xE4n t\\xE4ytyy varmistaa, ett\\xE4 kutsutaan oikeaa metodia. Aliaksia luodaan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using direktiivill\\xE4\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace MasterProject\\n{\\n  // M\\xE4\\xE4ritell\\xE4\\xE4n alias sis\\xE4kk\\xE4iselle nimiavaruudelle.\\n  using Project = MasterProject.Developers.Project;\\n  class MasterClass\\n  {\\n    void Master()\\n    {\\n      // K\\xE4ytet\\xE4\\xE4n aliasta\\n      Project.Builder bob = new Project.Builder();\\n    }\\n  }\\n  namespace Developers\\n  {\\n    namespace Project\\n    {\\n      public class Builder \\n      { \\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Aliasten luomiseen on kuitenkin rajoituksia. Esimerkiksi,\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// aliaksen luominen, toimii\\nusing c = System.Collections;\\n// aliaksen k\\xE4ytt\\xE4minen, ei toimi\\nusing c.Generic;\\n\")), mdx(\"p\", null, \"t\\xE4m\\xE4 aiheuttaa virheen. Kun luot \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using direktiivej\\xE4\"), \", sinun t\\xE4ytyy k\\xE4ytt\\xE4\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"t\\xE4ysin m\\xE4\\xE4riteltyj\\xE4 nimi\\xE4\"), \".\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/fi-fi/dotnet/csharp/programming-guide/namespaces/using-namespaces#namespace-aliases\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Voit lukea lis\\xE4\\xE4 aliaksista dokumentaatiosta.\"))), mdx(\"h2\", {\n    \"id\": \"using-lausekkeet\"\n  }, \"Using lausekkeet\"), mdx(\"p\", null, \"Toinen tapa k\\xE4ytt\\xE4\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using\"), \"-avainsanaa on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using lauseke\"), \" (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using statement\"), \"). Toisin kuin direktiivi, lauseke mahdollistaa meille tiettyjen asioiden k\\xE4yt\\xF6n vain lyhyeksi aikaa.\"), mdx(\"p\", null, \"Using lauseke on tarkoitettu olioille, jotka periv\\xE4t \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/dotnet/api/system.idisposable\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"IDisposable-rajapinnan\")), \", ja varmistaa, ett\\xE4 n\\xE4it\\xE4 olioita k\\xE4ytet\\xE4\\xE4n oikein.\"), mdx(\"p\", null, \"Esimerkiksi, using lauseke on ollut k\\xE4yt\\xF6ss\\xE4 teht\\xE4viemme testeiss\\xE4 alusta asti. Katsotaanpa:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"[Fact]\\npublic void TestExercise01()\\n{\\n  using (StringWriter sw = new StringWriter())\\n  { // Aloita using lohko\\n\\n    // Testin sis\\xE4lt\\xF6 olisi t\\xE4ss\\xE4\\n\\n  } // Lopeta using lohko\\n}\\n\")), mdx(\"p\", null, \"Meid\\xE4n ei tarvitse huolehtia testin toiminnallisuudesta, vaan keskitymme riviin \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using (StringWriter sw = new StringWriter())\"), \". T\\xE4m\\xE4 on meid\\xE4n \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using lausekkeemme\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lauseke sijaitsee metodissamme, ensimm\\xE4isen\\xE4 rivin\\xE4. T\\xE4m\\xE4 tarkoittaa, ett\\xE4 StringWriter, jonka luomme, on olemassa vain t\\xE4ss\\xE4 metodissa. Kun metodi (tai t\\xE4ss\\xE4 tapauksessa testi) on suoritettu, StringWriter-olio lakkaa olemasta.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Kun m\\xE4\\xE4rit\\xE4mme lausekkeen, m\\xE4\\xE4rittelemme olion kuten miss\\xE4 tahansa muussakin tilanteessa: m\\xE4\\xE4rittelemme, mink\\xE4 olion haluamme luoda, annamme sille muuttujanimen, ja kutsutaan sen konstruktoria.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Voimme k\\xE4ytt\\xE4\\xE4 muuttujaa \\\"sw\\\" metodin sis\\xE4ll\\xE4. Kun metodi on suoritettu, \\\"sw\\\" ei en\\xE4\\xE4 ole olemassa.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Lausekkeella on oma koodilohkonsa, joka on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using lohko\"), \". Huomaat sulut lausekkeen j\\xE4lkeen, ja niiden parin lausekkeen lopussa. Jos lausekkeen j\\xE4lkeen olisi koodia, se ei voisi k\\xE4ytt\\xE4\\xE4 lausekkeen muuttujaa.\"))), mdx(\"p\", null, \"Kun tarvitset oliota vain hyvin lyhyeksi aikaa, sinun tulisi k\\xE4ytt\\xE4\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using lauseketta\"), \". T\\xE4m\\xE4 varmistaa olion oikean h\\xE4vitt\\xE4misen ja s\\xE4\\xE4st\\xE4\\xE4 muistia.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/fi-fi/dotnet/csharp/language-reference/keywords/using-statement\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"Voit lukea lis\\xE4\\xE4 lausekkeista dokumentaatiosta.\"))), mdx(\"h1\", {\n    \"id\": \"tehtävät\"\n  }, \"Teht\\xE4v\\xE4t\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Kaikki t\\xE4m\\xE4n osan teht\\xE4v\\xE4t ovat 2 pisteen arvoisia, ilman erillisi\\xE4 osioita!\"), mdx(Exercise, {\n    title: '002 Using Directives',\n    mdxType: \"Exercise\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4ss\\xE4 teht\\xE4v\\xE4ss\\xE4, hyvin yksinkertaisesta ohjelmasta puuttuu \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"using direktiivit\"), \". Lis\\xE4\\xE4 ne, jotta koodi toimii. Tarvitset 4 eri direktiivi\\xE4.\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Jos et tied\\xE4 miss\\xE4 mik\\xE4kin sijaitsee, katso esimerkiksi \", mdx(\"a\", {\n    href: \"https://docs.microsoft.com/en-us/dotnet/api/system?view=net-6.0\",\n    target: \"_blank\"\n  }, \"Microsoftin API Browserista\"), \" apua.\", mdx(\"p\", null, \"Saatat joutua etsim\\xE4\\xE4n jotain, mit\\xE4 emme ole viel\\xE4 k\\xE4ytt\\xE4neet...\\nYou might have to find something we have not used yet...\"))), mdx(Exercise, {\n    title: '003 Aliases',\n    mdxType: \"Exercise\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"T\\xE4ss\\xE4 teht\\xE4v\\xE4ss\\xE4 meilt\\xE4 puuttuu aliaksia sek\\xE4 tiedostosta \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"MasterProject.cs\"), \" ett\\xE4 \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Program.cs\"), \". Luo ne jotta koodi toimii. L\\xF6yd\\xE4t tarvittavat aliakset katsomalla \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"t\\xE4ysin m\\xE4\\xE4riteltyj\\xE4 nimi\\xE4\"), \" ja \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"metodikutsuja\"), \".\"))), mdx(Exercise, {\n    title: '004 Using StreamWriter',\n    mdxType: \"Exercise\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"T\\xE4ss\\xE4 teht\\xE4v\\xE4ss\\xE4 meill\\xE4 on toimiva Main, jossa on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"StreamWriter\"), \". Muuta koodia, jotta Mainissa on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using lauseke\"), \" StreamWriterille.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Sinun pit\\xE4\\xE4 my\\xF6s poistaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Close()\"), \"-komento, koska using lauseke hoitaa sen!\"))), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Toiminnallisuuden ei tule muuttua!\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#using-käyttäminen","title":"Using käyttäminen","items":[{"url":"#using-direktiivi","title":"Using direktiivi","items":[{"url":"#aliakset","title":"Aliakset"}]},{"url":"#using-lausekkeet","title":"Using lausekkeet"}]},{"url":"#tehtävät","title":"Tehtävät"}]},"frontmatter":{"title":"Using"}}},"pageContext":{"id":"91bd9f9d-bad7-50d3-bb5b-fd8b2b2fa479"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}