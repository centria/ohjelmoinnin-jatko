{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa12/osa12-1",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Nimiavaruudet\",\n  \"nav_order\": 121,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Note = makeShortcode(\"Note\");\nvar Exercise = makeShortcode(\"Exercise\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Olemme k\\xE4ytt\\xE4neet \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nimiavaruuksia\"), \" (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"namespace\"), \") teht\\xE4viss\\xE4 ja esimerkeiss\\xE4 jo kurssin alusta l\\xE4htien. Mutta mit\\xE4 ne ovat tarkalleenottaen?\"), mdx(\"p\", null, \"Nimiavaruuksilla on kaksi p\\xE4\\xE4asiallista funktiota C#-ohjelmoinnissa. Ensinn\\xE4kin, niit\\xE4 k\\xE4ytet\\xE4\\xE4n luokkien ryhmittelyyn. Toiseksi, niit\\xE4 k\\xE4ytet\\xE4\\xE4n luokkien ja metodien saatavuuden ja n\\xE4kyvyyden hallintaan suurissa ohjelmissa.\"), mdx(\"h2\", {\n    \"id\": \"nimiavaruuksien-k채ytt채minen\"\n  }, \"Nimiavaruuksien k\\xE4ytt\\xE4minen\"), mdx(\"p\", null, \"Yleisin nimiavaruus t\\xE4h\\xE4n menness\\xE4 on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"System\"), \"-nimiavaruus. Ohjelmissamme kutsutaan sit\\xE4 seuraavasti:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"using System;\\n\")), mdx(\"p\", null, \"T\\xE4ll\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using\"), \"-direktiivill\\xE4 kerromme ohjelmalle, ett\\xE4 se saa k\\xE4ytt\\xE4\\xE4 System-nimiavaruuden luokkia, metodeja ja jopa sis\\xE4kk\\xE4isi\\xE4 nimiavaruuksia. Esimerkiksi, kun tulostamme ohjelmassamme jotain konsoliin:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"Console.WriteLine(\\\"text to be printed\\\");\\n\")), mdx(\"p\", null, \"Me itseasiassa kutsumme metodia:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"System.Console.WriteLine(\\\"text to be printed\\\");\\n\")), mdx(\"p\", null, \"K\\xE4ytt\\xE4m\\xE4ll\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using System\"), \", meid\\xE4n ei tarvitse kirjoittaa pitk\\xE4\\xE4 muotoa luokista (Console) ja metodeista (WriteLine), joten voimme pit\\xE4\\xE4 koodimme siistimp\\xE4n\\xE4 ja lyhyemp\\xE4n\\xE4. Tai miten sinusta tuntuu, jos joudut luomaan esimerkiksi listan joka kerta seuraavasti...\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"System.Collections.Generic.List<string> list = new System.Colletions.Generic.List<string>();\\n\")), mdx(\"h2\", {\n    \"id\": \"rajaaminen-nimiavaruuksilla\"\n  }, \"Rajaaminen nimiavaruuksilla\"), mdx(\"p\", null, \"Avainsanaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"namespace\"), \" voidaan k\\xE4ytt\\xE4\\xE4 luokkien ja metodien rajaamiseen projektissasi. T\\xE4m\\xE4 on erityisen t\\xE4rke\\xE4\\xE4 erityisen suurissa projekteissa, mutta sit\\xE4 voidaan k\\xE4ytt\\xE4\\xE4 my\\xF6s pienempien projektien j\\xE4rjest\\xE4miseen. Katsotaanpa esimerkki\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace OuterNamespace\\n{\\n  using System;\\n  class Example\\n  {\\n    public void ExampleMethod()\\n    {\\n      Console.WriteLine(\\\"ExampleMethod in OuterNamespace\\\");\\n    }\\n  }\\n\\n  // Luodaan sis\\xE4kk\\xE4inen nimiavaruus, ja m\\xE4\\xE4ritell\\xE4\\xE4n siihen toinen luokka.\\n  namespace InnerNamespace\\n  {\\n    class Example\\n    {\\n      public void ExampleMethod()\\n      {\\n        Console.WriteLine(\\\"ExampleMethod in InnerNamespace\\\");\\n      }\\n    }\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Exercise001\\n{\\n  class Program\\n  {\\n    static void Main(string[] args)\\n    {\\n      // Tulostaa \\\"ExampleMethod in OuterNamespace\\\"\\n      OuterNamespace.Example outer = new OuterNamespace.Example();\\n      outer.ExampleMethod();\\n\\n      // Tulostaa \\\"ExampleMethod in InnerNamespace\\\"\\n      OuterNamespace.InnerNamespace.Example inner = new OuterNamespace.InnerNamespace.Example();\\n      inner.ExampleMethod();\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Mit\\xE4 juuri tapahtui?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Ensin luomme nimiavaruuden \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OuterNamespace\"), \". T\\xE4m\\xE4 nimiavaruus sis\\xE4lt\\xE4\\xE4 kaiken esimerkkimme koodin.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Seuraavaksi m\\xE4\\xE4rittelemme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using System\"), \"-lauseen, jotta se on k\\xE4ytett\\xE4viss\\xE4 kaikissa nimiavaruuden luokissa. Vaikka meill\\xE4 on sis\\xE4kk\\xE4isi\\xE4 nimiavaruuksia ja useita luokkia, System on k\\xE4ytett\\xE4viss\\xE4 kaikissa niiss\\xE4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"M\\xE4\\xE4rit\\xE4mme luokan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\"), \". Luokka sis\\xE4lt\\xE4\\xE4 metodin \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ExampleMethod\"), \", joka tulostaa informatiivisen tekstin.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Seuraavaksi m\\xE4\\xE4rit\\xE4mme \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"nimiavaruuden nimiavaruuden sis\\xE4ll\\xE4\"), \", eli \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sis\\xE4kk\\xE4isen nimiavaruuden\"), \" (englanniksi nested namespace).\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"T\\xE4m\\xE4n nimiavaruuden sis\\xE4ll\\xE4 meill\\xE4 on luokka \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\"), \". Koska se on m\\xE4\\xE4ritelty sis\\xE4kk\\xE4isess\\xE4 nimiavaruuksessa, se voi olla samanniminen kuin ulomman nimiavaruuden luokka. Luokassa m\\xE4\\xE4ritell\\xE4\\xE4n metodi, joka tulostaa informatiivisen tekstin.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \"-metodissamme kutsutaan luokkia ja niiden metodeja. Huomaa, ett\\xE4 emme k\\xE4yt\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"using\"), \"-lauseita, vaan pitki\\xE4 nimiavaruuksien nimi\\xE4. My\\xF6s \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \" on eri nimiavaruudessa.\"))), mdx(\"p\", null, \"Siirret\\xE4\\xE4n \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \"-metodi samaan nimiavaruuteen luokkien kanssa:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace OuterNamespace\\n{\\n\\n  class Program\\n  {\\n    static void Main(string[] args)\\n    {\\n      // Displays \\\"ExampleMethod in \\\"\\n      Example outer = new Example();\\n      outer.ExampleMethod();\\n\\n      // Displays \\\"ExampleMethod in InnerNamespace.\\\"\\n      InnerNamespace.Example inner = new InnerNamespace.Example();\\n      inner.ExampleMethod();\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Kuten n\\xE4hd\\xE4\\xE4n, koodi on jo paljon selke\\xE4mp\\xE4\\xE4, koska \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \" on nyt \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"samassa n\\xE4kyvyydess\\xE4\"), \", tai samassa nimiavaruudessa kuin luokat: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \" voi \\\"n\\xE4hd\\xE4\\\" luokat ja metodit \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OuterNamespace\"), \"-nimiavaruudessa suoraan, koska se on my\\xF6s osa sit\\xE4.\"), mdx(\"h2\", {\n    \"id\": \"hiearkia-ja-t채yspitk채t-nimet\"\n  }, \"Hiearkia ja t\\xE4yspitk\\xE4t nimet\"), mdx(\"p\", null, \"Nimiavaruuksilla ja Tyypeill\\xE4 on t\\xE4yspitk\\xE4t nimet (englanniksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fully qualified names\"), \"), tai \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"uniikit nimet\"), \", jotka osoittavat kyseisen kohteen hierarkiaa. Esimerkiksi yll\\xE4 k\\xE4yt\\xE4mme lausetta \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"OuterNamespace.InnerNamespace.Example\"), \". T\\xE4m\\xE4 n\\xE4ytt\\xE4\\xE4 hiearkan, jossa:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"OuterNamespace\"), \" on uloimman nimiavaruuden nimi (tai tyypin, t\\xE4ll\\xE4 kertaa nimiavaruuden)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"InnerNamespace\"), \" on seuraavan nimiavaruuden nimi (tai tyypin)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Example\"), \" on sis\\xE4llytetty yll\\xE4 olevaan nimiavaruuteen\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jne, jne, jne...\")))))))), mdx(\"p\", null, \"Eli tarkemmin, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".\"), \" (piste) osoittaa hierarkiaa. Katsotaanpa toista esimerkki\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Outmost     // Outmost, uloin nimiavaruus\\n{\\n  class ExampleClass      // Outmost.ExampleClass\\n  {\\n    class ExampleInnerClass   // Outmost.ExampleClass.ExampleInnerClass\\n    {\\n    }\\n  }\\n  namespace Inner  // Outmost.Inner, sis\\xE4kk\\xE4inen nimiavaruus\\n  {\\n    class ExampleInnerClass   // Outmost.Inner.ExampleInnerClass\\n    {\\n    }\\n\\n    class ExampleOtherClass  // Outmost.Inner.ExampleOtherClass\\n    {\\n    }\\n  }\\n}\\n\")), mdx(\"p\", null, \"Yll\\xE4 olevassa esimerkiss\\xE4:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nimiavaruudella \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost\"), \" on t\\xE4yspitk\\xE4 nimi \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nimiavaruus \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Inner\"), \" on nimiavaruuden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost\"), \" j\\xE4sen, ja sill\\xE4 on t\\xE4yspitk\\xE4 nimi \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost.Inner\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Luokka \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ExampleClass\"), \" on nimiavaruuden \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost\"), \" j\\xE4sen, ja sill\\xE4 on t\\xE4yspitk\\xE4 nimi \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost.ExampleClass\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Luokka \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ExampleInnerClass\"), \" n\\xE4hd\\xE4\\xE4n kahdesti koodissa. Koska ne on m\\xE4\\xE4ritelty erilaisissa uniikeissa sijainneissa, nill\\xE4 on uniikit t\\xE4yspitk\\xE4t nimet:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensimm\\xE4inen on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost.ExampleClass.ExampleInnerClass\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Toinen on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost.Inner.ExampleInnerClass\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aivan kuten aiemminkin, voime tietty m\\xE4\\xE4ritell\\xE4 muita luokkia nimiavaruudessa. T\\xE4ss\\xE4 meill\\xE4 on luokka \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ExampleOtherClass\"), \", jonka t\\xE4yspitk\\xE4 nimi on \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Outmost.Inner.ExampleOtherClass\"), \".\")), mdx(\"p\", null, \"Katsomalla pelkk\\xE4\\xE4 t\\xE4yspitk\\xE4\\xE4 nime\\xE4, voimme tiet\\xE4\\xE4, onko tyyppi tai nimiavaruus osa suurempaa kokonaisuutta, ja miten yll\\xE4 oleva rakenne on luotu.\"), mdx(\"h1\", {\n    \"id\": \"teht채v채t\"\n  }, \"Teht\\xE4v\\xE4t\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Kaikki t\\xE4m\\xE4n osan teht\\xE4v\\xE4t ovat 2 pisteen arvoisia, ilman erillisi\\xE4 osioita!\"), mdx(Exercise, {\n    title: '001 Namespace Examples',\n    mdxType: \"Exercise\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Teht\\xE4v\\xE4ss\\xE4 on valmis ohjelma Mainissa, mutta \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NamespaceExample.cs\"), \"-tiedostosta puuttuvat nimiavaruudet.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Luo kaksi nimiavaruutta, joista toinen on sis\\xE4kk\\xE4inen toiseen. L\\xF6yd\\xE4t nimiavaruuksien nimet katsomalla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"t\\xE4yspitki\\xE4 nimi\\xE4\"), \" ja niiden kutsuja Mainissa.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"items":[{"url":"#nimiavaruuksien-k채ytt채minen","title":"Nimiavaruuksien k채ytt채minen"},{"url":"#rajaaminen-nimiavaruuksilla","title":"Rajaaminen nimiavaruuksilla"},{"url":"#hiearkia-ja-t채yspitk채t-nimet","title":"Hiearkia ja t채yspitk채t nimet"}]},{"url":"#teht채v채t","title":"Teht채v채t"}]},"frontmatter":{"title":"Nimiavaruudet"}}},"pageContext":{"id":"c33d623a-9fb2-5c63-94ac-b8cf43a924e6"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}