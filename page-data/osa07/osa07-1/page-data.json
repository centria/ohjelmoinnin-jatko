{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/osa07/osa07-1",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Projektit\",\n  \"nav_order\": 71,\n  \"hidden\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Note = makeShortcode(\"Note\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"projektit\"\n  }, \"Projektit\"), mdx(\"p\", null, \"T\\xE4h\\xE4n menness\\xE4 olemme p\\xE4\\xE4st\\xE4neet itsemme helpolla: emme ole tehneet projekteja itse, vaan olemme saaneet valmiit pohjat teht\\xE4viss\\xE4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \".\\n\\u251C\\u2500\\u2500 src\\n\\u2502   \\u2514\\u2500\\u2500 Exercise001\\n\\u2502       \\u251C\\u2500\\u2500 Exercise.csproj\\n\\u2502       \\u251C\\u2500\\u2500 Program.cs\\n\\u2514\\u2500\\u2500 test\\n    \\u2514\\u2500\\u2500 Exercise001Test\\n        \\u251C\\u2500\\u2500 Exercise001Tests.csproj\\n        \\u2514\\u2500\\u2500 ProgramTest.cs\\n\")), mdx(\"p\", null, \"T\\xE4m\\xE4 ei ole kovin j\\xE4rkev\\xE4 tapa luoda tai yll\\xE4pit\\xE4\\xE4 projekteja. Meid\\xE4n on my\\xF6s opittava luomaan projekteja itse.\"), mdx(\"h1\", {\n    \"id\": \"ensimm채isen-projektin-luominen\"\n  }, \"Ensimm\\xE4isen projektin luominen\"), mdx(\"p\", null, \"Olemme jo k\\xE4ytt\\xE4neet hyv\\xE4ksemme hyvin yksinkertaista \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dotnet\"), \"-komentoa, nimitt\\xE4in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dotnet run\"), \"-komentoa, jolla olemme kokeilleet teht\\xE4vi\\xE4 omalla koneellamme. Kyseinen komento on osa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dotnet\"), \"-ohjelmaa, jonka asensimme jo peruskurssin esitietona. Ohjelmalla on tietysti muitakin komentoja. K\\xE4yt\\xE4mme t\\xE4ss\\xE4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dotnet new\"), \"-komentoa, jolla luomme oman ohjelmamme.\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"N\\xE4m\\xE4 ohjeet on kirjoitettu Visual Studio Code -editori mieless\\xE4, sill\\xE4 k\\xE4yt\\xE4mme sit\\xE4 harjoituksissamme.\"), mdx(\"p\", null, \"Seuraava on sovellettu \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://learn.microsoft.com/en-us/dotnet/core/tutorials/with-visual-studio-code?pivots=dotnet-6-0\"\n  }, \"t\\xE4\\xE4lt\\xE4\"), \".\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"K\\xE4ynnist\\xE4 Visual Studio Code\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Valitse \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"File > Open Folder\"), \" p\\xE4\\xE4valikosta\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Open Folder\"), \" -dialogissa luo HelloWorld-kansio ja valitse se\")), mdx(\"p\", null, \"Kansion nimi tulee olemaan projektin nimi ja nimiavaruus oletuksena. Lis\\xE4\\xE4t koodia my\\xF6hemmin, joka olettaa projektin nimiavaruuden olevan \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HelloWorld\"), \".\"), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Avaa \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Terminal\"), \" Visual Studio Codessa ja varmista, ett\\xE4 olet oikeassa kansiossa (juuri luotu kansio).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Kirjoita seuraava komento terminaaliin:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"dotnet new console\\n\")), mdx(\"p\", null, \"Kun k\\xE4yt\\xE4mme \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"dotnet 6.0\"), \":aa malli on hyvin yksinkertainen, sis\\xE4lt\\xE4en vain \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Console.WriteLine(String)\"), \"-metodin, joka tulostaa \\\"Hello World!\\\" konsoli-ikkunaan.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// See https://aka.ms/new-console-template for more information\\nConsole.WriteLine(\\\"Hello, World!\\\");\\n\")), mdx(\"p\", null, \"K\\xE4yt\\xE4nn\\xF6ss\\xE4 (ja vanhemmissa versioissa) malli on jotain seuraavaa:\"), mdx(\"p\", null, \"Pohja luo yksinkertaisen \\\"Hello World\\\"-sovelluksen. Se kutsuu \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Console.WriteLine(String)\"), \"-metodia tulostaakseen \\\"Hello World!\\\" konsoli-ikkunaan.\"), mdx(\"p\", null, \"Pohjakoodi m\\xE4\\xE4rittelee luokan, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Program\"), \", jossa on yksi metodi, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Main\"), \", joka ottaa \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"String\"), \"-taulukon argumenttina:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace HelloWorld\\n{\\n    using System;\\n\\n    class Program\\n    {\\n        static void Main(string[] args)\\n        {\\n            Console.WriteLine(\\\"Hello World!\\\");\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"Main on sovelluksen k\\xE4ynnistyspiste, metodi, jota runtime kutsuu automaattisesti sovelluksen k\\xE4ynnistyess\\xE4. Komentorivill\\xE4 annetut argumentit, kun sovellus k\\xE4ynnistet\\xE4\\xE4n, ovat saatavilla \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"args\"), \"-taulukossa.\"), mdx(\"p\", null, \"Ajaaksesi sovelluksen, k\\xE4yt\\xE4 tuttua \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dotnet run\"), \"-komentoa. \"), mdx(\"h2\", {\n    \"id\": \"organisointi-ja-testaus-k채ytt채en-newtypes-pets-esimerkki채\"\n  }, \"Organisointi ja testaus k\\xE4ytt\\xE4en NewTypes Pets Esimerkki\\xE4\"), mdx(\"p\", null, \"Seuraava on sovellettu \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/dotnet/core/tutorials/testing-with-cli\"\n  }, \"t\\xE4\\xE4lt\\xE4\"), \".\"), mdx(\"h3\", {\n    \"id\": \"esimerkin-luominen\"\n  }, \"Esimerkin luominen\"), mdx(\"p\", null, \"Seuraavia askelia varten, luo omat tiedostot ja kansiot, jos haluat testata esimerkki\\xE4 itse.\"), mdx(\"p\", null, \"El\\xE4intyypit on loogisesti j\\xE4rjestetty kansiorakenteeseen, joka mahdollistaa uusien tyyppien lis\\xE4\\xE4misen my\\xF6hemmin, ja testit on my\\xF6s loogisesti sijoitettu kansioihin, mik\\xE4 mahdollistaa uusien testien lis\\xE4\\xE4misen my\\xF6hemmin.\"), mdx(\"p\", null, \"Esimerkki sis\\xE4lt\\xE4\\xE4 kaksi tyyppi\\xE4, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dog\"), \" ja \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cat\"), \". Tavoitteena on j\\xE4rjest\\xE4\\xE4 el\\xE4intyypit kansioon \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pets\"), \". Jos my\\xF6hemmin lis\\xE4t\\xE4\\xE4n uusia tyyppej\\xE4, esimerkiksi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WildAnimals\"), \", ne sijoitetaan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypes\"), \"-kansioon \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Pets\"), \"-kansion viereen. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WildAnimals\"), \"-kansio voi sis\\xE4lt\\xE4\\xE4 tyyppej\\xE4, jotka eiv\\xE4t ole lemmikkej\\xE4, kuten \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Squirrel\"), \" ja \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Rabbit\"), \"-tyypit. T\\xE4ll\\xE4 tavoin, kun tyyppej\\xE4 lis\\xE4t\\xE4\\xE4n, projekti pysyy hyvin j\\xE4rjestettyn\\xE4.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"/NewTypes\\n|__/src\\n   |__/NewTypes\\n      |__/Pets\\n         |__Dog.cs\\n         |__Cat.cs\\n      |__Program.cs\\n      |__NewTypes.csproj\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Dog.cs\"), \" voisi n\\xE4ytt\\xE4\\xE4 esim t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Pets\\n{\\n    public class Dog\\n    {\\n        public string TalkToOwner()\\n        {\\n            return \\\"Woof!\\\";\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cat.cs\"), \" puolestaan n\\xE4ytt\\xE4\\xE4 esim t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace Pets\\n{\\n    public class Cat\\n    {\\n        public string TalkToOwner()\\n        {\\n            return \\\"Meow!\\\";\\n        }\\n    }\\n}\\n\")), mdx(\"p\", null, \"Meid\\xE4n \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Program.cs\"), \" n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"// See https://aka.ms/new-console-template for more information\\nusing Pets;\\n\\nDog doggie = new Dog();\\nCat cattie = new Cat();\\nConsole.WriteLine(doggie.TalkToOwner());\\nConsole.WriteLine(cattie.TalkToOwner());\\n\")), mdx(\"p\", null, \"Ja \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypes.csproj\"), \" sis\\xE4lt\\xF6 on seuraava:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<Project Sdk=\\\"Microsoft.NET.Sdk\\\">\\n\\n  <PropertyGroup>\\n    <OutputType>Exe</OutputType>\\n    <TargetFramework>net6.0</TargetFramework>\\n    <ImplicitUsings>enable</ImplicitUsings>\\n    <Nullable>enable</Nullable>\\n  </PropertyGroup>\\n\\n</Project>\\n\")), mdx(\"h3\", {\n    \"id\": \"esimerkin-testaaminen\"\n  }, \"Esimerkin testaaminen\"), mdx(\"p\", null, \"Nyt NewTypes -projekti on paikallaan, ja olet j\\xE4rjest\\xE4nyt sen pit\\xE4m\\xE4ll\\xE4 lemmikkiel\\xE4imiin liittyv\\xE4t tyypit kansiossa. Lis\\xE4t\\xE4\\xE4n nyt v\\xE4h\\xE4n testej\\xE4. Teht\\xE4viss\\xE4mme, olemme k\\xE4ytt\\xE4neet \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-dotnet-test\"\n  }, mdx(\"strong\", {\n    parentName: \"a\"\n  }, \"xUnit testej\\xE4\")), \". Yksikk\\xF6testaus mahdollistaa lemmikkiel\\xE4intyyppien k\\xE4ytt\\xE4ytymisen automaattisen tarkistamisen, jotta voidaan varmistaa, ett\\xE4 ne toimivat asianmukaisesti.\"), mdx(\"p\", null, \"Luomme testimme nyt v\\xE4h\\xE4n manuaalisesti. Navigoi takaisin juurikansioon ja luo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"test\"), \"-kansio, jossa on \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest\"), \"-kansio. Komentokehotteesta \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest\"), \"-kansiossa, suorita \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet new xunit\"), \". T\\xE4m\\xE4 tuottaa kolme tiedostoa: \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Usings.cs\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"NewTypeTest.csproj\"), \" ja \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"UnitTest1.cs\"), \".\"), mdx(\"p\", null, \"Testiprojektimme ei pysty t\\xE4ll\\xE4 hetkell\\xE4 testaamaan NewTypes-kansiossa olevia tyyppej\\xE4, vaan vaatii viittauksen projektiin NewTypes. Lis\\xE4t\\xE4ksesi projektiin viittauksen, k\\xE4yt\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet add reference\"), \"-komentoa:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"dotnet add reference ../../src/NewTypes/NewTypes.csproj\\n\")), mdx(\"p\", null, \"Jos saat virheilmoitukset, tai jos haluat tehd\\xE4 sen manuaalisesti, voit my\\xF6s lis\\xE4t\\xE4 t\\xE4m\\xE4n \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest.csproj\"), \"-tiedostoon itse:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<ItemGroup>\\n  <ProjectReference Include=\\\"../../src/NewTypes/NewTypes.csproj\\\" />\\n</ItemGroup>\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Joillain laitteilla kansion v\\xE4liss\\xE4 olevat kauttaviivat on kirjoitettava \\\"\\\\\\\" sijaan \\\"/\\\". Jos saat virheen lis\\xE4\\xE4misen j\\xE4lkeen, kokeile toista kauttaviivaa (kuten alla); \"), mdx(\"p\", null, \"Nyt \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest.csproj\"), \"-tiedostossa pit\\xE4isi olla jotain seuraavan kaltaista:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<Project Sdk=\\\"Microsoft.NET.Sdk\\\">\\n\\n  <PropertyGroup>\\n    <TargetFramework>net6.0</TargetFramework>\\n    <ImplicitUsings>enable</ImplicitUsings>\\n    <Nullable>enable</Nullable>\\n\\n    <IsPackable>false</IsPackable>\\n  </PropertyGroup>\\n\\n  <ItemGroup>\\n    <PackageReference Include=\\\"Microsoft.NET.Test.Sdk\\\" Version=\\\"17.1.0\\\" />\\n    <PackageReference Include=\\\"xunit\\\" Version=\\\"2.4.1\\\" />\\n    <PackageReference Include=\\\"xunit.runner.visualstudio\\\" Version=\\\"2.4.3\\\">\\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\\n      <PrivateAssets>all</PrivateAssets>\\n    </PackageReference>\\n    <PackageReference Include=\\\"coverlet.collector\\\" Version=\\\"3.1.2\\\">\\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\\n      <PrivateAssets>all</PrivateAssets>\\n    </PackageReference>\\n  </ItemGroup>\\n\\n  <ItemGroup>\\n    <ProjectReference Include=\\\"..\\\\..\\\\src\\\\NewTypes\\\\NewTypes.csproj\\\" />\\n  </ItemGroup>\\n\\n</Project>\\n\")), mdx(\"p\", null, \"Tiedosto \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest.csproj\"), \" sis\\xE4lt\\xE4\\xE4 seuraavat pakettiviittaukset (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PackageReference\"), \"):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pakettiviittaus xunit, xUnit-testauskehys\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pakettiviittaus xunit.runner.visualstudio, jotta voimme testata VSC:ll\\xE4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pakettiviittaus Microsoft.NET.Test.Sdk, .NET-testausinfrastruktuuri\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Projekti viittaus \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"NewTypes\"), \", koodi, jota testataan\")), mdx(\"p\", null, \"Mukana on my\\xF6s paljon tarpeetonta koodia perustestaukseen. Poistetaan \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"assets\"), \" kohdasta \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xunit.runner.visualstudio\"), \", sek\\xE4 koko \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"coverlet.collector\"), \". Tiedostosi pit\\xE4isi n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4, kun olet valmis:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<Project Sdk=\\\"Microsoft.NET.Sdk\\\">\\n\\n  <PropertyGroup>\\n    <TargetFramework>net6.0</TargetFramework>\\n    <ImplicitUsings>enable</ImplicitUsings>\\n    <Nullable>enable</Nullable>\\n\\n    <IsPackable>false</IsPackable>\\n  </PropertyGroup>\\n\\n  <ItemGroup>\\n    <PackageReference Include=\\\"Microsoft.NET.Test.Sdk\\\" Version=\\\"17.1.0\\\" />\\n    <PackageReference Include=\\\"xunit\\\" Version=\\\"2.4.1\\\" />\\n    <PackageReference Include=\\\"xunit.runner.visualstudio\\\" Version=\\\"2.4.3\\\" />\\n  </ItemGroup>\\n\\n  <ItemGroup>\\n    <ProjectReference Include=\\\"..\\\\..\\\\src\\\\NewTypes\\\\NewTypes.csproj\\\" />\\n  </ItemGroup>\\n\\n</Project>\\n\")), mdx(\"p\", null, \"Muutetaan tiedoston \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UnitTest1.cs\"), \" nimi \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PetTests.cs\"), \"-tiedostoksi ja korvataan tiedoston sis\\xE4lt\\xF6 seuraavalla:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-cpp\"\n  }, \"namespace NewTypeTest;\\n\\nusing Pets;\\n\\npublic class PetTests\\n{\\n    [Fact]\\n    public void DogTalkToOwnerReturnsWoof()\\n    {\\n        string expected = \\\"Woof!\\\";\\n        string actual = new Dog().TalkToOwner();\\n\\n        Assert.NotEqual(expected, actual);\\n    }\\n\\n    [Fact]\\n    public void CatTalkToOwnerReturnsMeow()\\n    {\\n        string expected = \\\"Meow!\\\";\\n        string actual = new Cat().TalkToOwner();\\n\\n        Assert.NotEqual(expected, actual);\\n    }\\n}\\n\")), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Nimiavaruus n\\xE4ytt\\xE4\\xE4 hieman erilaiselta kuin mihin olemme tottuneet, puolipisteiden sijaan lohkokoodin sijaan. T\\xE4m\\xE4 on uusi ominaisuus.\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Vaikka odotat, ett\\xE4 odotetut ja todelliset arvot ovat samat, alustava v\\xE4ite **Assert.NotEqual**-tarkistuksella m\\xE4\\xE4ritt\\xE4\\xE4, ett\\xE4 n\\xE4m\\xE4 arvot eiv\\xE4t ole samat.\", mdx(\"p\", null, \"Aina alussa luo testi joka ep\\xE4onnistuu, jotta voit tarkistaa testin logiikan. Kun olet vahvistanut, ett\\xE4 testi ep\\xE4onnistuu, muuta v\\xE4ite sallimaan testin l\\xE4p\\xE4isy. P\\xE4\\xE4semme testaamiseen hetken kuluttua.\")), mdx(\"p\", null, \"Seuraava on projektin rakenne t\\xE4h\\xE4n menness\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"/NewTypes\\n|__/src\\n   |__/NewTypes\\n      |__/Pets\\n         |__Dog.cs\\n         |__Cat.cs\\n      |__Program.cs\\n      |__NewTypes.csproj\\n|__/test\\n   |__NewTypeTest\\n      |__PetTests.cs\\n      |__NewTypeTest.csproj\\n\")), mdx(\"p\", null, \"Aja komento \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet test\"), \" kansiossa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest\"), \".\"), mdx(\"p\", null, \"Kuten odotettua, testaus ep\\xE4onnistuu, ja konsoli n\\xE4ytt\\xE4\\xE4 seuraavan tulosteen:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Starting test execution, please wait...\\nA total of 1 test files matched the specified pattern.\\n[xUnit.net 00:00:00.25]     PetTests.CatTalkToOwnerReturnsMeow [FAIL]\\n[xUnit.net 00:00:00.25]     PetTests.DogTalkToOwnerReturnsWoof [FAIL]\\n  Failed PetTests.CatTalkToOwnerReturnsMeow [3 ms]\\n  Error Message:\\n   Assert.NotEqual() Failure\\nExpected: Not \\\"Meow!\\\"\\nActual:   \\\"Meow!\\\"\\n  Stack Trace:\\n     at PetTests.CatTalkToOwnerReturnsMeow() in C:\\\\Users\\\\HeikkiHei\\\\Documents\\\\repos\\\\coding-exercises\\\\testproject\\\\test\\\\NewTypeTest\\\\PetTests.cs:line 22\\n  Failed PetTests.DogTalkToOwnerReturnsWoof [< 1 ms]\\n  Error Message:\\n   Assert.NotEqual() Failure\\nExpected: Not \\\"Woof!\\\"\\nActual:   \\\"Woof!\\\"\\n  Stack Trace:\\n     at PetTests.DogTalkToOwnerReturnsWoof() in C:\\\\Users\\\\HeikkiHei\\\\Documents\\\\repos\\\\coding-exercises\\\\testproject\\\\test\\\\NewTypeTest\\\\PetTests.cs:line 13\\n\\nFailed!  - Failed:     2, Passed:     0, Skipped:     0, Total:     2, Duration: 4 ms - NewTypeTest.dll (net6.0)\\n\")), mdx(\"p\", null, \"Muutetaan testin v\\xE4itteet \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Assert.NotEqual\"), \" muotoon \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Assert.Equal\"), \" ja ajetaan testit uudelleen \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet test\"), \"-komennolla:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"Starting test execution, please wait...\\nA total of 1 test files matched the specified pattern.\\n\\nPassed!  - Failed:     0, Passed:     2, Skipped:     0, Total:     2, Duration: 1 ms - NewTypeTest.dll (net6.0)\\n\")), mdx(\"p\", null, \"Nyt olemme luoneet hyvin organisoidun projektin. Voimme ajaa testej\\xE4 ja itse projektia. Olet ehk\\xE4 huomannut, ett\\xE4 ajamme komennot \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet run\"), \" ja \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet test\"), \" eri kansioista. T\\xE4m\\xE4 johtuu siit\\xE4, ett\\xE4 kun ajamme komentoja, tarkistamme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".csproj\"), \"-tiedoston, mit\\xE4 ajamme.\"), mdx(\"p\", null, \"Komentoja ei voi ajaa sellaisenaan samasta kansiosta, vaan ne vaativat joitain parametreja. Esimerkiksi, jos olemme \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest\"), \"-kansiossa, voimme ajaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet test\"), \"-komennon, koska tiedosto \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypeTest.csproj\"), \" on kyseisess\\xE4 kansiossa. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"/NewTypes\\n|__/src\\n   |__/NewTypes\\n      |__/Pets\\n         |__Dog.cs\\n         |__Cat.cs\\n      |__Program.cs\\n      |__NewTypes.csproj\\n|__/test\\n   |__NewTypeTest <-- OLEMME T\\xC4\\xC4LL\\xC4\\n      |__PetTests.cs\\n      |__NewTypeTest.csproj\\n\")), mdx(\"p\", null, \"Jos haluamme ajaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet run\"), \" samasta kansiosta, meid\\xE4n on kerrottava, miss\\xE4 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypes.csproj\"), \" on. T\\xE4m\\xE4 onnistuu antamalla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"-p\"), \"-vaihtoehto, eli viittaus projektiin:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"dotnet test\\ndotnet run -p ../../src/NewTypes/NewTypes.csproj\\n\")), mdx(\"p\", null, \"Toisaalta, voisimme olla \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NewTypes\"), \"-kansiossa ja ajaa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet run\"), \"-komennon sellaisenaan.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"/NewTypes\\n|__/src\\n   |__/NewTypes <-- OLEMME T\\xC4\\xC4LL\\xC4\\n      |__/Pets\\n         |__Dog.cs\\n         |__Cat.cs\\n      |__Program.cs\\n      |__NewTypes.csproj\\n|__/test\\n   |__NewTypeTest\\n      |__PetTests.cs\\n      |__NewTypeTest.csproj\\n\")), mdx(\"p\", null, \"Nyt \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dotnet test\"), \" vaatii hieman lis\\xE4tietoa. Komennolle ei tarvitse antaa projektia, vaan \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".csproj\"), \"-tiedosto riitt\\xE4\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"dotnet run\\ndotnet test ../../test/NewTypeTest/NewTypeTest.csproj\\n\")), mdx(\"p\", null, \"T\\xE4m\\xE4 toimii miss\\xE4 tahansa projektin kansiossa, kunhan muistat antaa vaihtoehdot oikein:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"/NewTypes <-- NYT OLEMME T\\xC4\\xC4LL\\xC4\\n|__/src\\n   |__/NewTypes\\n      |__/Pets\\n         |__Dog.cs\\n         |__Cat.cs\\n      |__Program.cs\\n      |__NewTypes.csproj\\n|__/test\\n   |__NewTypeTest\\n      |__PetTests.cs\\n      |__NewTypeTest.csproj\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-console\"\n  }, \"dotnet run -p src/NewTypes/NewTypes.csproj\\ndotnet test test/NewTypeTest/NewTypeTest.csproj\\n\")), mdx(\"h1\", {\n    \"id\": \"teht채v채t\"\n  }, \"Teht\\xE4v\\xE4t\"), mdx(Note, {\n    mdxType: \"Note\"\n  }, \"Ei teht\\xE4vi\\xE4 t\\xE4ss\\xE4 osassa, vain paljon t\\xE4rke\\xE4\\xE4 tietoa.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#projektit","title":"Projektit"},{"url":"#ensimm채isen-projektin-luominen","title":"Ensimm채isen projektin luominen","items":[{"url":"#organisointi-ja-testaus-k채ytt채en-newtypes-pets-esimerkki채","title":"Organisointi ja testaus k채ytt채en NewTypes Pets Esimerkki채","items":[{"url":"#esimerkin-luominen","title":"Esimerkin luominen"},{"url":"#esimerkin-testaaminen","title":"Esimerkin testaaminen"}]}]},{"url":"#teht채v채t","title":"Teht채v채t"}]},"frontmatter":{"title":"Projektit"}}},"pageContext":{"id":"3ab0f089-0952-55fe-81c7-7a204ba45725"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}